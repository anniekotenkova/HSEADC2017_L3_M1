{"ast":null,"code":"var _jsxFileName = \"/Users/kotya/HSEADC2017_L3_M1/app/javascript/components/effects/BitCrusher.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PlaySwitch from '../controls/PlaySwitch';\nimport ToggleSwitch from '../controls/ToggleSwitch';\nimport Slider from '../controls/Slider';\nimport Knob from '../controls/Knob';\n\nvar BitCrusher =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BitCrusher, _React$Component);\n\n  function BitCrusher(props) {\n    _classCallCheck(this, BitCrusher);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BitCrusher).call(this, props));\n  }\n\n  _createClass(BitCrusher, [{\n    key: \"render\",\n    value: function render() {\n      var name = 'bitCrusher';\n      var _this$props = this.props,\n          effect = _this$props.effect,\n          on = _this$props.on,\n          wet = _this$props.wet,\n          toggleEffect = _this$props.toggleEffect,\n          changeEffectWetValue = _this$props.changeEffectWetValue,\n          changeBitCrusherValue = _this$props.changeBitCrusherValue;\n      return React.createElement(\"div\", {\n        className: \"Effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"effectOn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(ToggleSwitch, {\n        value: \"BitCrusher\",\n        current: on,\n        handleClick: toggleEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, name)), React.createElement(\"div\", {\n        className: \"sliderBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"infoEffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Wet\"), React.createElement(\"p\", {\n        className: \"effectValue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, effect.wet.value)), React.createElement(Slider, {\n        name: name,\n        min: 0,\n        max: 1,\n        value: effect.wet.value,\n        handleValueChange: changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"infoEffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Bits\"), React.createElement(\"p\", {\n        className: \"effectValue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, effect.bits.value)), React.createElement(Slider, {\n        name: name,\n        min: 1,\n        max: 8,\n        value: effect.bits,\n        handleValueChange: changeBitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return BitCrusher;\n}(React.Component);\n\nexport { BitCrusher as default };","map":{"version":3,"sources":["/Users/kotya/HSEADC2017_L3_M1/app/javascript/components/effects/BitCrusher.jsx"],"names":["React","PlaySwitch","ToggleSwitch","Slider","Knob","BitCrusher","props","name","effect","on","wet","toggleEffect","changeEffectWetValue","changeBitCrusherValue","value","bits","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;IAEqBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,mFACXA,KADW;AAElB;;;;6BAEQ;AACP,UAAIC,IAAI,GAAG,YAAX;AADO,wBASH,KAAKD,KATF;AAAA,UAGLE,MAHK,eAGLA,MAHK;AAAA,UAILC,EAJK,eAILA,EAJK;AAAA,UAKLC,GALK,eAKLA,GALK;AAAA,UAMLC,YANK,eAMLA,YANK;AAAA,UAOLC,oBAPK,eAOLA,oBAPK;AAAA,UAQLC,qBARK,eAQLA,qBARK;AAUP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,OAAO,EAAEJ,EAFX;AAGE,QAAA,WAAW,EAAEE,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,IAAL,CANF,CADF,EASE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH,EAEG;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BC,MAAM,CAACE,GAAP,CAAWI,KAAvC,CAFH,CADF,EAKG,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEP,IADR;AAEE,QAAA,GAAG,EAAE,CAFP;AAGE,QAAA,GAAG,EAAE,CAHP;AAIE,QAAA,KAAK,EAAEC,MAAM,CAACE,GAAP,CAAWI,KAJpB;AAKE,QAAA,iBAAiB,EAAEF,oBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CADD,EAcC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,EAEG;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BJ,MAAM,CAACO,IAAP,CAAYD,KAAxC,CAFH,CADH,EAKG,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEP,IADR;AAEE,QAAA,GAAG,EAAE,CAFP;AAGE,QAAA,GAAG,EAAE,CAHP;AAIE,QAAA,KAAK,EAAEC,MAAM,CAACO,IAJhB;AAKE,QAAA,iBAAiB,EAAEF,qBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CAdD,CATF,CADF;AAwCD;;;;EAvDqCb,KAAK,CAACgB,S;;SAAzBX,U","sourcesContent":["import React from 'react'\n\nimport PlaySwitch from '../controls/PlaySwitch'\nimport ToggleSwitch from '../controls/ToggleSwitch'\nimport Slider from '../controls/Slider'\nimport Knob from '../controls/Knob'\n\nexport default class BitCrusher extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    let name = 'bitCrusher'\n    const {\n      effect,\n      on,\n      wet,\n      toggleEffect,\n      changeEffectWetValue,\n      changeBitCrusherValue\n    } = this.props\n    return (\n      <div className=\"Effect\">\n        <div className=\"effectOn\">\n          <ToggleSwitch\n            value=\"BitCrusher\"\n            current={on}\n            handleClick={toggleEffect}\n          />\n          <h1>{name}</h1>\n        </div>\n        <div className=\"sliderBlock\">\n         <div className=\"slider\">\n           <div className=\"infoEffect\">\n              <p>Wet</p>\n              <p className=\"effectValue\">{effect.wet.value}</p>\n           </div>\n            <Slider\n              name={name}\n              min={0}\n              max={1}\n              value={effect.wet.value}\n              handleValueChange={changeEffectWetValue}\n            />\n         </div>\n         <div className=\"slider\">\n            <div className=\"infoEffect\">\n               <p>Bits</p>\n               <p className=\"effectValue\">{effect.bits.value}</p>\n            </div>\n            <Slider\n              name={name}\n              min={1}\n              max={8}\n              value={effect.bits}\n              handleValueChange={changeBitCrusherValue}\n            />\n         </div>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}