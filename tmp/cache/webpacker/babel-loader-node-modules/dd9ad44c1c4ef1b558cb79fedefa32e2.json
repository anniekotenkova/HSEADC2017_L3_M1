{"ast":null,"code":"var _jsxFileName = \"/Users/kotya/sequencer/app/javascript/components/effects/Chebyshev.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PlaySwitch from '../controls/PlaySwitch';\nimport ToggleSwitch from '../controls/ToggleSwitch';\nimport Slider from '../controls/Slider';\nimport Knob from '../controls/Knob';\nimport ButtonSet from '../controls/ButtonSet';\n\nvar Chebyshev =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chebyshev, _React$Component);\n\n  function Chebyshev(props) {\n    _classCallCheck(this, Chebyshev);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Chebyshev).call(this, props));\n  }\n\n  _createClass(Chebyshev, [{\n    key: \"render\",\n    value: function render() {\n      var set = ['none', '2x', '4x'];\n      var _this$props = this.props,\n          name = _this$props.name,\n          effect = _this$props.effect,\n          wet = _this$props.wet,\n          on = _this$props.on,\n          toggleEffect = _this$props.toggleEffect,\n          changeEffectWetValue = _this$props.changeEffectWetValue,\n          changeEffectValue = _this$props.changeEffectValue;\n      return React.createElement(\"div\", {\n        className: \"Effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"effectOn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(ToggleSwitch, {\n        value: \"Chebyshev\",\n        current: on,\n        handleClick: toggleEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Chebyshev\")), React.createElement(\"div\", {\n        className: \"sliderBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Wet\"), React.createElement(Slider, {\n        name: name,\n        min: \"0\",\n        max: \"1\",\n        value: effect.wet.value,\n        handleValueChange: changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Order\"), React.createElement(Slider, {\n        name: name,\n        min: \"1\",\n        max: \"100\",\n        value: effect.order,\n        handleValueChange: changeChebyshevOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Type\"), React.createElement(ButtonSet, {\n        name: name,\n        property: \"type\",\n        set: set,\n        value: effect.type,\n        handleValueChange: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Chebyshev;\n}(React.Component);\n\nexport { Chebyshev as default };","map":{"version":3,"sources":["/Users/kotya/sequencer/app/javascript/components/effects/Chebyshev.jsx"],"names":["React","PlaySwitch","ToggleSwitch","Slider","Knob","ButtonSet","Chebyshev","props","set","name","effect","wet","on","toggleEffect","changeEffectWetValue","changeEffectValue","value","order","changeChebyshevOrder","type","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;IAEqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kFACXA,KADW;AAElB;;;;6BAEQ;AACP,UAAMC,GAAG,GAAG,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,CAAZ;AADO,wBAWH,KAAKD,KAXF;AAAA,UAILE,IAJK,eAILA,IAJK;AAAA,UAKLC,MALK,eAKLA,MALK;AAAA,UAMLC,GANK,eAMLA,GANK;AAAA,UAOLC,EAPK,eAOLA,EAPK;AAAA,UAQLC,YARK,eAQLA,YARK;AAAA,UASLC,oBATK,eASLA,oBATK;AAAA,UAULC,iBAVK,eAULA,iBAVK;AAaP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,OAAO,EAAEH,EAFX;AAGE,QAAA,WAAW,EAAEC,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,CADF,EASE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEJ,IADR;AAEE,QAAA,GAAG,EAAC,GAFN;AAGE,QAAA,GAAG,EAAC,GAHN;AAIE,QAAA,KAAK,EAAEC,MAAM,CAACC,GAAP,CAAWK,KAJpB;AAKE,QAAA,iBAAiB,EAAEF,oBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAWE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEL,IADR;AAEE,QAAA,GAAG,EAAC,GAFN;AAGE,QAAA,GAAG,EAAC,KAHN;AAIE,QAAA,KAAK,EAAEC,MAAM,CAACO,KAJhB;AAKE,QAAA,iBAAiB,EAAEC,oBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAXF,CATF,EA+BE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAET,IADR;AAEE,QAAA,QAAQ,EAAC,MAFX;AAGE,QAAA,GAAG,EAAED,GAHP;AAIE,QAAA,KAAK,EAAEE,MAAM,CAACS,IAJhB;AAKE,QAAA,iBAAiB,EAAEJ,iBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CA/BF,CADF;AA4CD;;;;EA9DoCf,KAAK,CAACoB,S;;SAAxBd,S","sourcesContent":["import React from 'react'\n\nimport PlaySwitch from '../controls/PlaySwitch'\nimport ToggleSwitch from '../controls/ToggleSwitch'\nimport Slider from '../controls/Slider'\nimport Knob from '../controls/Knob'\nimport ButtonSet from '../controls/ButtonSet'\n\nexport default class Chebyshev extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const set = ['none', '2x', '4x']\n\n    const {\n      name,\n      effect,\n      wet,\n      on,\n      toggleEffect,\n      changeEffectWetValue,\n      changeEffectValue\n    } = this.props\n\n    return (\n      <div className=\"Effect\">\n        <div className=\"effectOn\">\n          <ToggleSwitch\n            value=\"Chebyshev\"\n            current={on}\n            handleClick={toggleEffect}\n          />\n          <h1>Chebyshev</h1>\n        </div>\n        <div className=\"sliderBlock\">\n          <div className=\"slider\">\n            <p>Wet</p>\n            <Slider\n              name={name}\n              min=\"0\"\n              max=\"1\"\n              value={effect.wet.value}\n              handleValueChange={changeEffectWetValue}\n            />\n          </div>\n          <div className=\"slider\">\n            <p>Order</p>\n            <Slider\n              name={name}\n              min=\"1\"\n              max=\"100\"\n              value={effect.order}\n              handleValueChange={changeChebyshevOrder}\n            />\n          </div>\n        </div>\n        <div className=\"slider\">\n          <p>Type</p>\n          <ButtonSet\n            name={name}\n            property=\"type\"\n            set={set}\n            value={effect.type}\n            handleValueChange={changeEffectValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}