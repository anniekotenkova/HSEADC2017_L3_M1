{"ast":null,"code":"var _jsxFileName = \"/Users/kotya/sequencer/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport Slider from '../components/controls/Slider';\nimport BpmSlider from '../components/controls/BpmSlider';\nimport ToggleSwitch from '../components/controls/ToggleSwitch';\nimport PlaySwitch from '../components/controls/PlaySwitch';\nimport Knob from '../components/controls/Knob';\nimport Keyboard from '../components/Keyboard';\nimport tune1 from '../tunes/tune1'; // import * as effects from '../tunes/effects'\n// import * as parts from '../tunes/parts'\n// import * as synths from '../tunes/synths'\n\nimport Chorus from '../components/effects/Chorus';\nimport Reverb from '../components/effects/Reverb'; // import AutoFilter from '../components/effects/AutoFilter'\n// import AutoPanner from '../components/effects/AutoPanner'\n// import AutoWah from '../components/effects/AutoWah'\n\nimport BitCrusher from '../components/effects/BitCrusher'; // import Chebyshev from '../components/effects/Chebyshev'\n\nimport Distortion from '../components/effects/Distortion';\nimport FeedbackDelay from '../components/effects/FeedbackDelay'; // import FeedbackEffect from '../components/effects/FeedbackEffect'\n\nimport Freeverb from '../components/effects/Freeverb'; // import JcReverb from '../components/effects/JcReverb'\n// import Phaser from '../components/effects/Phaser'\n// import PingPongDelay from '../components/effects/PingPongDelay'\n// import PitchShift from '../components/effects/PitchShift'\n// import StereoWidener from '../components/effects/StereoWidener'\n\nimport Tremolo from '../components/effects/Tremolo'; // import Vibrato from '../components/effects/Vibrato'\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props)); // Sequencer with effects\n\n    var synth = new Tone.PolySynth({\n      polyphony: 4,\n      volume: 0,\n      detune: 0,\n      voice: Tone.Synth\n    });\n    var volume = new Tone.PanVol();\n    var autoFilter = new Tone.AutoFilter();\n    var feedbackDelay = new Tone.FeedbackDelay();\n    var tremolo = new Tone.Tremolo();\n    var distortion = new Tone.Distortion();\n    var autoPanner = new Tone.AutoPanner();\n    var autoWah = new Tone.AutoWah();\n    var bitCrusher = new Tone.BitCrusher();\n    var chebyshev = new Tone.Chebyshev();\n    var chorus = new Tone.Chorus();\n    var convolver = new Tone.Convolver();\n    var effect = new Tone.Effect();\n    var feedbackEffect = new Tone.FeedbackEffect();\n    var freeverb = new Tone.Freeverb();\n    var jcReverb = new Tone.JCReverb();\n    var phaser = new Tone.Phaser();\n    var pingPongDelay = new Tone.PingPongDelay();\n    var pitchShift = new Tone.PitchShift();\n    var reverb = new Tone.Reverb();\n    var stereoWidener = new Tone.StereoWidener();\n    var vibrato = new Tone.Vibrato();\n    autoFilter.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    distortion.wet.value = 0;\n    effect.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    tremolo.wet.value = 0;\n    vibrato.wet.value = 0;\n    synth.chain(volume, autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, effect, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master);\n    var loop1 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(['G4', 'G3', 'Fb3'], '8n', time);\n    }, '4n');\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(['C4', 'E4', 'G4', 'B4'], '16n', time);\n    }, '2n');\n    var loop3 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('G4', '8n', time);\n    }, '8n');\n    var loop4 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('G3', '10n', time);\n    }, '4n'); //rh SYNTH\n\n    var rhSynth = new Tone.DuoSynth({\n      vibratoAmount: 0.5,\n      vibratoRate: 5,\n      harmonicity: 1.5,\n      voice0: {\n        volume: -10,\n        portamento: 0,\n        oscillator: {\n          type: 'sine'\n        },\n        filterEnvelope: {\n          attack: 0.01,\n          decay: 0,\n          sustain: 1,\n          release: 0.5\n        },\n        envelope: {\n          attack: 0.01,\n          decay: 0,\n          sustain: 1,\n          release: 0.5\n        }\n      },\n      voice1: {\n        volume: -10,\n        portamento: 0,\n        oscillator: {\n          type: 'sine'\n        },\n        filterEnvelope: {\n          attack: 0.01,\n          decay: 0,\n          sustain: 1,\n          release: 0.5\n        },\n        envelope: {\n          attack: 0.01,\n          decay: 0,\n          sustain: 1,\n          release: 0.5\n        }\n      }\n    });\n    rhSynth.chain(volume, autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, effect, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master);\n    var part = new Tone.Part(function (time, event) {\n      rhSynth.triggerAttackRelease(event.note, event.dur, time);\n    }, [{\n      time: '0:1:1',\n      note: 'G#3',\n      velocity: 95,\n      dur: '0.2'\n    }, {\n      time: '0:1:2',\n      note: 'G3',\n      velocity: 95,\n      dur: '0.2'\n    }, {\n      time: '0:1:2:1',\n      note: 'C3',\n      velocity: 95,\n      dur: '0.2'\n    }, {\n      time: '0:1:3',\n      note: 'C3',\n      velocity: 95,\n      dur: '0.6'\n    }, {\n      time: '0:1:6',\n      note: 'C3',\n      velocity: 95,\n      dur: '0.3'\n    }, {\n      time: '0:2:1',\n      note: 'C3',\n      velocity: 95,\n      dur: '0.3'\n    }, {\n      time: '0:2:1',\n      note: 'C3',\n      velocity: 95,\n      dur: '0.3'\n    }, {\n      time: '0:2:1:1',\n      note: 'C#3',\n      velocity: 95,\n      dur: '0.3'\n    }, {\n      time: '0:2:2:1',\n      note: 'C#3',\n      velocity: 95,\n      dur: '0.3'\n    }, {\n      time: '0:2:4',\n      note: 'C#3',\n      velocity: 95,\n      dur: '0.3'\n    }, {\n      time: '0:3:1',\n      note: 'C#3',\n      velocity: 95,\n      dur: '0.6'\n    }]);\n    part.loop = true;\n    part.loopEnd = '0:3:1 ';\n    var synthKeys = new Tone.Synth({\n      oscillator: {\n        type: 'triangle8'\n      },\n      envelope: {\n        attack: 2,\n        decay: 1,\n        sustain: 0.4,\n        release: 1\n      }\n    }).toMaster();\n    _this.state = {\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false,\n        frTemp: 0\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      effect: {\n        effect: effect,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      rhSynth: {\n        instrument: rhSynth,\n        on: false\n      },\n      part: part,\n      tempo: 60,\n      synthKeys: synthKeys,\n      volume: volume\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'toggleLoop', 'toggleRh', 'changeEffectWetValue', 'changeFrequencyChorus', 'changeDistortionValue', 'changeBitCrusherValue', 'changeChorusValue', 'changeChorusFrequency', 'bpmChange', 'toggleEffect', 'handleMouseDown', 'handleMouseUp');\n\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"bpmTest\",\n    value: function bpmTest() {\n      console.log(Tone.Transport.bpm.value);\n    }\n  }, {\n    key: \"bpmChange\",\n    value: function bpmChange(value) {\n      var tempo = this.state.tempo;\n      tempo = Math.round(value);\n      Tone.Transport.bpm.value = tempo;\n      console.log('new bpm', Tone.Transport.bpm.value);\n      this.setState({\n        tempo: tempo\n      });\n    }\n  }, {\n    key: \"changeEffect\",\n    value: function changeEffect(effectName, paramName, increment, value) {\n      var volume = this.state.volume;\n      volume.value = Math.round(value);\n      this.setState({\n        volume: volume\n      });\n    } // def SYNTH\n\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var tempo = this.state.tempo;\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n      Tone.Transport.bpm.value = tempo;\n      Tone.Transport.start();\n      console.log('start bpm', Tone.Transport.bpm.value);\n    } // rh Synth\n\n  }, {\n    key: \"toggleRh\",\n    value: function toggleRh() {\n      var _this$state = this.state,\n          rhSynth = _this$state.rhSynth,\n          part = _this$state.part,\n          tempo = _this$state.tempo;\n      var on = rhSynth.on;\n      on ? part.stop() : part.start();\n      this.setState({\n        rhSynth: {\n          on: !on\n        }\n      });\n      Tone.Transport.bpm.value = tempo;\n      Tone.Transport.start();\n      console.log('BPM NOW:', Tone.Transport.bpm.value);\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeBitCrusherValue\",\n    value: function changeBitCrusherValue(effectName, value) {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          wet = _this$state$bitCrushe.wet,\n          on = _this$state$bitCrushe.on;\n      effect.bits = Math.round(value);\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeChorusValue\",\n    value: function changeChorusValue(effectName, value) {\n      var _this$state$chorus = this.state.chorus,\n          effect = _this$state$chorus.effect,\n          wet = _this$state$chorus.wet,\n          on = _this$state$chorus.on;\n      effect.delayTime = Math.round(value);\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeChorusFrequency\",\n    value: function changeChorusFrequency(effectName, value) {\n      var _this$state$chorus2 = this.state.chorus,\n          effect = _this$state$chorus2.effect,\n          wet = _this$state$chorus2.wet,\n          on = _this$state$chorus2.on;\n      effect.frequency.value = value;\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFrequencyChorus\",\n    value: function changeFrequencyChorus(value) {\n      var _this$state$chorus3 = this.state.chorus,\n          effect = _this$state$chorus3.effect,\n          frTemp = _this$state$chorus3.frTemp,\n          on = _this$state$chorus3.on;\n      effect.frequency.value = value;\n      console.log(effect.frequency.value);\n      this.setState({\n        chorus: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayValue\",\n    value: function changeFeedbackDelayValue(effectName, value) {\n      var _this$state$feedbackD = this.state.feedbackDelay,\n          effect = _this$state$feedbackD.effect,\n          wet = _this$state$feedbackD.wet,\n          on = _this$state$feedbackD.on;\n      effect.maxDelay = value;\n      this.setState({\n        feedbackDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(note, octave) {\n      var synthKeys = this.state.synthKeys;\n      synthKeys.triggerAttack(\"\".concat(note).concat(octave));\n      console.log('Down');\n      this.setState({\n        synthKeys: synthKeys\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {\n      var synthKeys = this.state.synthKeys;\n      synthKeys.triggerRelease();\n      console.log('Up');\n      this.setState({\n        synthKeys: synthKeys\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          tempo = _this$state2.tempo,\n          chorus = _this$state2.chorus,\n          synth = _this$state2.synth,\n          rhSynth = _this$state2.rhSynth,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3,\n          loop4 = _this$state2.loop4;\n      var _toggleEffect = this.toggleEffect;\n      return React.createElement(\"section\", {\n        className: \"synthBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"startBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"titleBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }, \" Get started making music\"), React.createElement(\"p\", {\n        className: \"infoBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, \"Press the buttons below to play \", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, \" presets \")), React.createElement(\"div\", {\n        className: \"Loops\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"loopBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: rhSynth.on,\n        handleToggleClick: this.toggleRh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"loopBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"loopBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"loopBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"loopBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"effectsBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      }, React.createElement(BpmSlider, {\n        min: \"0\",\n        max: \"220\",\n        value: tempo,\n        handleValueChange: this.bpmChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }), React.createElement(BpmSlider, {\n        min: \"0\",\n        max: \"100\",\n        value: this.state.volume,\n        handleVolumeChange: this.changeEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694\n        },\n        __self: this\n      }), React.createElement(BitCrusher, Object.assign({}, this.state.bitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('bitCrusher');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeBitCrusherValue: this.changeBitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701\n        },\n        __self: this\n      })), React.createElement(Chorus, Object.assign({}, this.state.chorus, {\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeChorusValue: this.changeChorusValue,\n        changeChorusFrequency: this.changeChorusFrequency,\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('chorus');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        },\n        __self: this\n      })), React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        changeEffectWetValue: this.changeEffectWetValue,\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('distortion');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/kotya/sequencer/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","Slider","BpmSlider","ToggleSwitch","PlaySwitch","Knob","Keyboard","tune1","Chorus","Reverb","BitCrusher","Distortion","FeedbackDelay","Freeverb","Tremolo","Synth","props","synth","PolySynth","polyphony","volume","detune","voice","PanVol","autoFilter","AutoFilter","feedbackDelay","tremolo","distortion","autoPanner","AutoPanner","autoWah","AutoWah","bitCrusher","chebyshev","Chebyshev","chorus","convolver","Convolver","effect","Effect","feedbackEffect","FeedbackEffect","freeverb","jcReverb","JCReverb","phaser","Phaser","pingPongDelay","PingPongDelay","pitchShift","PitchShift","reverb","stereoWidener","StereoWidener","vibrato","Vibrato","wet","value","chain","Master","loop1","Loop","time","triggerAttackRelease","loop2","loop3","loop4","rhSynth","DuoSynth","vibratoAmount","vibratoRate","harmonicity","voice0","portamento","oscillator","type","filterEnvelope","attack","decay","sustain","release","envelope","voice1","part","Part","event","note","dur","velocity","loop","loopEnd","synthKeys","toMaster","state","on","frTemp","instrument","tempo","bindAll","console","log","Transport","bpm","Math","round","setState","effectName","paramName","increment","loopName","stop","start","bits","delayTime","frequency","maxDelay","octave","triggerAttack","triggerRelease","toggleEffect","toggleRh","toggleLoop","bpmChange","changeEffect","changeEffectWetValue","changeBitCrusherValue","changeChorusValue","changeChorusFrequency","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport Slider from '../components/controls/Slider'\nimport BpmSlider from '../components/controls/BpmSlider'\nimport ToggleSwitch from '../components/controls/ToggleSwitch'\nimport PlaySwitch from '../components/controls/PlaySwitch'\nimport Knob from '../components/controls/Knob'\nimport Keyboard from '../components/Keyboard'\n\nimport tune1 from '../tunes/tune1'\n\n// import * as effects from '../tunes/effects'\n// import * as parts from '../tunes/parts'\n// import * as synths from '../tunes/synths'\n\nimport Chorus from '../components/effects/Chorus'\nimport Reverb from '../components/effects/Reverb'\n// import AutoFilter from '../components/effects/AutoFilter'\n// import AutoPanner from '../components/effects/AutoPanner'\n// import AutoWah from '../components/effects/AutoWah'\nimport BitCrusher from '../components/effects/BitCrusher'\n// import Chebyshev from '../components/effects/Chebyshev'\nimport Distortion from '../components/effects/Distortion'\nimport FeedbackDelay from '../components/effects/FeedbackDelay'\n// import FeedbackEffect from '../components/effects/FeedbackEffect'\nimport Freeverb from '../components/effects/Freeverb'\n// import JcReverb from '../components/effects/JcReverb'\n// import Phaser from '../components/effects/Phaser'\n// import PingPongDelay from '../components/effects/PingPongDelay'\n// import PitchShift from '../components/effects/PitchShift'\n// import StereoWidener from '../components/effects/StereoWidener'\n import Tremolo from '../components/effects/Tremolo'\n// import Vibrato from '../components/effects/Vibrato'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    // Sequencer with effects\n\n    let synth = new Tone.PolySynth(\n      {\n        polyphony : 4 ,\n        volume : 0 ,\n        detune : 0 ,\n        voice : Tone.Synth\n      }\n    )\n    let volume = new Tone.PanVol()\n\n    let autoFilter = new Tone.AutoFilter()\n    let feedbackDelay = new Tone.FeedbackDelay()\n    let tremolo = new Tone.Tremolo()\n    let distortion = new Tone.Distortion()\n    let autoPanner = new Tone.AutoPanner()\n    let autoWah = new Tone.AutoWah()\n    let bitCrusher = new Tone.BitCrusher()\n    let chebyshev = new Tone.Chebyshev()\n    let chorus = new Tone.Chorus()\n    let convolver = new Tone.Convolver()\n    let effect = new Tone.Effect()\n    let feedbackEffect = new Tone.FeedbackEffect()\n    let freeverb = new Tone.Freeverb()\n    let jcReverb = new Tone.JCReverb()\n    let phaser = new Tone.Phaser()\n    let pingPongDelay = new Tone.PingPongDelay()\n    let pitchShift = new Tone.PitchShift()\n    let reverb = new Tone.Reverb()\n    let stereoWidener = new Tone.StereoWidener()\n    let vibrato = new Tone.Vibrato()\n\n    autoFilter.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    distortion.wet.value = 0\n    effect.wet.value = 0\n    feedbackDelay.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    tremolo.wet.value = 0\n    vibrato.wet.value = 0\n\n    synth.chain(\n      volume,\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      effect,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    let loop1 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(['G4', 'G3', 'Fb3'], '8n', time)\n    }, '4n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(['C4', 'E4', 'G4', 'B4'], '16n', time)\n    }, '2n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('G4', '8n', time)\n    }, '8n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('G3', '10n', time)\n    }, '4n')\n\n    //rh SYNTH\n    let rhSynth = new Tone.DuoSynth( {\n      vibratoAmount : 0.5 ,\n      vibratoRate : 5 ,\n      harmonicity : 1.5 ,\n      voice0 : {\n        volume : -10 ,\n        portamento : 0 ,\n        oscillator : {\n          type : 'sine'\n        } ,\n        filterEnvelope : {\n          attack : 0.01 ,\n          decay : 0 ,\n          sustain : 1 ,\n          release : 0.5\n        } ,\n        envelope : {\n          attack : 0.01 ,\n          decay : 0 ,\n          sustain : 1 ,\n          release : 0.5\n        }\n      } ,\n      voice1 : {\n        volume : -10 ,\n        portamento : 0 ,\n        oscillator : {\n          type : 'sine'\n        } ,\n        filterEnvelope : {\n          attack : 0.01 ,\n          decay : 0 ,\n          sustain : 1 ,\n          release : 0.5\n        } ,\n        envelope : {\n          attack : 0.01 ,\n          decay : 0 ,\n          sustain : 1 ,\n          release : 0.5\n        }\n      }\n    })\n\n    rhSynth.chain(\n      volume,\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      effect,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    let part = new Tone.Part(\n      function(time, event) {\n        rhSynth.triggerAttackRelease(event.note, event.dur, time)\n      },\n        [\n        {\n          time: '0:1:1',\n          note: 'G#3',\n          velocity: 95,\n          dur: '0.2'\n        },\n        {\n          time: '0:1:2',\n          note: 'G3',\n          velocity: 95,\n          dur: '0.2'\n        },\n        {\n          time: '0:1:2:1',\n          note: 'C3',\n          velocity: 95,\n          dur: '0.2'\n        },\n        {\n          time: '0:1:3',\n          note: 'C3',\n          velocity: 95,\n          dur: '0.6'\n        },\n        {\n          time: '0:1:6',\n          note: 'C3',\n          velocity: 95,\n          dur: '0.3'\n        },\n        {\n          time: '0:2:1',\n          note: 'C3',\n          velocity: 95,\n          dur: '0.3'\n        },\n        {\n          time: '0:2:1',\n          note: 'C3',\n          velocity: 95,\n          dur: '0.3'\n        },\n        {\n          time: '0:2:1:1',\n          note: 'C#3',\n          velocity: 95,\n          dur: '0.3'\n        },\n        {\n          time: '0:2:2:1',\n          note: 'C#3',\n          velocity: 95,\n          dur: '0.3'\n        },\n        {\n          time: '0:2:4',\n          note: 'C#3',\n          velocity: 95,\n          dur: '0.3'\n        },\n        {\n          time: '0:3:1',\n          note: 'C#3',\n          velocity: 95,\n          dur: '0.6'\n        },\n\n      ]\n    )\n\n    part.loop = true\n    part.loopEnd = '0:3:1 '\n\n    let synthKeys = new Tone.Synth({\n      oscillator: {\n        type: 'triangle8'\n      },\n      envelope: {\n        attack: 2,\n        decay: 1,\n        sustain: 0.4,\n        release: 1\n      }\n    }).toMaster()\n\n    this.state = {\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false,\n        frTemp: 0\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      effect: {\n        effect: effect,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false,\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      rhSynth: {\n        instrument: rhSynth,\n        on: false\n      },\n      part,\n      tempo: 60,\n      synthKeys,\n      volume: volume,\n    }\n\n    _.bindAll(\n      this,\n      'toggleLoop',\n      'toggleRh',\n      'changeEffectWetValue',\n      'changeFrequencyChorus',\n      'changeDistortionValue',\n      'changeBitCrusherValue',\n      'changeChorusValue',\n      'changeChorusFrequency',\n      'bpmChange',\n      'toggleEffect',\n      'handleMouseDown',\n      'handleMouseUp',\n    )\n  }\n\n  bpmTest() {\n    console.log(Tone.Transport.bpm.value)\n  }\n\n\n  bpmChange(value) {\n    let { tempo } = this.state\n    tempo = Math.round(value)\n    Tone.Transport.bpm.value = tempo\n    console.log('new bpm', Tone.Transport.bpm.value)\n\n    this.setState({\n      tempo\n    })\n  }\n\n  changeEffect(effectName, paramName, increment, value) {\n    let { volume } = this.state\n    volume.value = Math.round(value)\n\n    this.setState({\n      volume\n    })\n  }\n  // def SYNTH\n  toggleLoop(loopName) {\n    let { tempo } = this.state\n    let { loop, on } = this.state[loopName]\n\n    on ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n\n    Tone.Transport.bpm.value = tempo\n    Tone.Transport.start()\n    console.log('start bpm', Tone.Transport.bpm.value)\n  }\n\n  // rh Synth\n  toggleRh() {\n    let { rhSynth, part, tempo } = this.state\n    let { on } = rhSynth\n\n    on ? part.stop() : part.start()\n\n    this.setState({\n      rhSynth: {\n        on: !on\n      }\n    })\n\n    Tone.Transport.bpm.value = tempo\n    Tone.Transport.start()\n    console.log('BPM NOW:', Tone.Transport.bpm.value)\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n    effect.wet.value = on ? value : 0\n\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: { effect, wet, on }\n    })\n  }\n\n  changeBitCrusherValue(effectName, value) {\n    let { effect, wet, on } = this.state.bitCrusher\n\n    effect.bits = Math.round(value)\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeChorusValue(effectName, value) {\n    let { effect, wet, on } = this.state.chorus\n\n    effect.delayTime = Math.round(value)\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeChorusFrequency(effectName, value) {\n    let { effect, wet, on } = this.state.chorus\n\n    effect.frequency.value = value\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFrequencyChorus(value) {\n    let { effect, frTemp, on } = this.state.chorus\n    effect.frequency.value = value\n    console.log(effect.frequency.value)\n\n    this.setState({\n      chorus: { effect, on }\n    })\n  }\n\n  changeFeedbackDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackDelay\n\n    effect.maxDelay = value\n\n    this.setState({\n      feedbackDelay: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: { effect, wet, on }\n    })\n  }\n\n  handleMouseDown(note, octave) {\n    let { synthKeys } = this.state\n\n    synthKeys.triggerAttack(`${note}${octave}`)\n\n    console.log('Down')\n\n    this.setState({\n      synthKeys\n    })\n  }\n\n  handleMouseUp() {\n    let { synthKeys } = this.state\n    synthKeys.triggerRelease()\n\n    console.log('Up')\n\n    this.setState({\n      synthKeys\n    })\n  }\n\n  render() {\n    let {\n      tempo,\n      chorus,\n      synth,\n      rhSynth,\n      loop1,\n      loop2,\n      loop3,\n      loop4\n    } = this.state\n    let { toggleEffect } = this\n    return (\n      <section className=\"synthBody\">\n        <div className=\"startBlock\">\n          <h1  className=\"titleBlock\"> Get started making music</h1>\n          <p className=\"infoBlock\">Press the buttons below to play <em> presets </em></p>\n          <div className=\"Loops\">\n            <div className=\"loopBlock\" >\n              <PlaySwitch\n                name=\"play\"\n                value={rhSynth.on}\n                handleToggleClick={this.toggleRh}\n              />\n            </div>\n            <div className=\"loopBlock\" >\n              <PlaySwitch\n                name=\"play\"\n                value={loop1.on}\n                handleToggleClick={() => this.toggleLoop('loop1')}\n              />\n            </div>\n            <div className=\"loopBlock\" >\n              <PlaySwitch\n                name=\"play\"\n                value={loop2.on}\n                handleToggleClick={() => this.toggleLoop('loop2')}\n              />\n            </div>\n            <div className=\"loopBlock\" >\n              <PlaySwitch\n                name=\"play\"\n                value={loop3.on}\n                handleToggleClick={() => this.toggleLoop('loop3')}\n              />\n            </div>\n            <div className=\"loopBlock\" >\n              <PlaySwitch\n                name=\"play\"\n                value={loop4.on}\n                handleToggleClick={() => this.toggleLoop('loop4')}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"effectsBlock\">\n          <BpmSlider\n            min=\"0\"\n            max=\"220\"\n            value={tempo}\n            handleValueChange={this.bpmChange}\n          />\n\n          <BpmSlider\n            min=\"0\"\n            max=\"100\"\n            value={this.state.volume}\n            handleVolumeChange={this.changeEffect}\n          />\n\n          <BitCrusher\n            {...this.state.bitCrusher}\n            toggleEffect={() => toggleEffect('bitCrusher')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeBitCrusherValue={this.changeBitCrusherValue}\n          />\n\n          <Chorus\n            {...this.state.chorus}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeChorusValue={this.changeChorusValue}\n            changeChorusFrequency={this.changeChorusFrequency}\n            toggleEffect={() => toggleEffect('chorus')}\n          />\n\n          <Distortion\n            {...this.state.distortion}\n            changeEffectWetValue={this.changeEffectWetValue}\n            toggleEffect={() => toggleEffect('distortion')}\n          />\n        </div>\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}