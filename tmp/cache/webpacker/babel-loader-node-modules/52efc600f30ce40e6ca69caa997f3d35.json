{"ast":null,"code":"var _jsxFileName = \"/Users/kotya/HSEADC2017_L3_M1/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport Slider from '../components/controls/Slider';\nimport ToggleSwitch from '../components/controls/ToggleSwitch';\nimport PlaySwitch from '../components/controls/PlaySwitch';\nimport Knob from '../components/controls/Knob';\nimport Chorus from '../components/effects/Chorus';\nimport Reverb from '../components/effects/Reverb'; // import AutoFilter from '../components/effects/AutoFilter'\n\nimport AutoPanner from '../components/effects/AutoPanner'; // import AutoWah from '../components/effects/AutoWah'\n\nimport BitCrusher from '../components/effects/BitCrusher';\nimport Chebyshev from '../components/effects/Chebyshev';\nimport Distortion from '../components/effects/Distortion';\nimport FeedbackDelay from '../components/effects/FeedbackDelay'; // import FeedbackEffect from '../components/effects/FeedbackEffect'\n\nimport Freeverb from '../components/effects/Freeverb'; // import JcReverb from '../components/effects/JcReverb'\n// import Phaser from '../components/effects/Phaser'\n// import PingPongDelay from '../components/effects/PingPongDelay'\n// import PitchShift from '../components/effects/PitchShift'\n\nimport StereoWidener from '../components/effects/StereoWidener';\nimport Tremolo from '../components/effects/Tremolo';\nimport Vibrato from '../components/effects/Vibrato';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props)); // Sequencer with effects\n\n    var defaultValue = 0;\n    var synth = new Tone.PolySynth({\n      polyphony: 4,\n      volume: 0,\n      detune: 0,\n      voice: Tone.Synth\n    });\n    var volume = new Tone.PanVol();\n    var autoFilter = new Tone.AutoFilter();\n    var feedbackDelay = new Tone.FeedbackDelay();\n    var tremolo = new Tone.Tremolo();\n    var distortion = new Tone.Distortion();\n    var autoPanner = new Tone.AutoPanner();\n    var autoWah = new Tone.AutoWah();\n    var bitCrusher = new Tone.BitCrusher();\n    var chebyshev = new Tone.Chebyshev();\n    var chorus = new Tone.Chorus();\n    var convolver = new Tone.Convolver();\n    var effect = new Tone.Effect();\n    var feedbackEffect = new Tone.FeedbackEffect();\n    var freeverb = new Tone.Freeverb();\n    var jcReverb = new Tone.JCReverb();\n    var phaser = new Tone.Phaser();\n    var pingPongDelay = new Tone.PingPongDelay();\n    var pitchShift = new Tone.PitchShift();\n    var reverb = new Tone.Reverb();\n    var stereoWidener = new Tone.StereoWidener();\n    var vibrato = new Tone.Vibrato();\n    autoFilter.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    distortion.wet.value = 0;\n    effect.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    tremolo.wet.value = 0;\n    vibrato.wet.value = 0;\n    synth.chain(volume, autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, effect, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master);\n    var loop1 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(['G4', 'D#3', 'D#2'], '0.3', time);\n    }, '0.3');\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('E#4', '0.3', time);\n    }, '0.3');\n    var loop3 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('G4', '8n', time);\n    }, '0.9');\n    var loop4 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(['G4', 'D#3', 'D#2'], '0.3', time);\n    }, '0.3'); //part of SYNTH\n\n    var partSynth = new Tone.DuoSynth({\n      vibratoAmount: 0.5,\n      vibratoRate: 5,\n      harmonicity: 1.5,\n      voice0: {\n        volume: -10,\n        portamento: 0,\n        oscillator: {\n          type: 'sine'\n        },\n        filterEnvelope: {\n          attack: 0.01,\n          decay: 0,\n          sustain: 1,\n          release: 0.5\n        },\n        envelope: {\n          attack: 0.01,\n          decay: 0,\n          sustain: 1,\n          release: 0.5\n        }\n      },\n      voice1: {\n        volume: -10,\n        portamento: 0,\n        oscillator: {\n          type: 'sine'\n        },\n        filterEnvelope: {\n          attack: 0.01,\n          decay: 0,\n          sustain: 1,\n          release: 0.5\n        },\n        envelope: {\n          attack: 0.01,\n          decay: 0,\n          sustain: 1,\n          release: 0.5\n        }\n      }\n    });\n    partSynth.chain(volume, autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, effect, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master);\n    var part = new Tone.Part(function (time, event) {\n      partSynth.triggerAttackRelease(event.note, event.dur, time);\n    }, [{\n      time: '0:1:1',\n      note: 'G#3',\n      velocity: 95,\n      dur: '0.2'\n    }, {\n      time: '0:1:2',\n      note: 'G3',\n      velocity: 95,\n      dur: '0.2'\n    }, {\n      time: '0:1:2:1',\n      note: 'C3',\n      velocity: 95,\n      dur: '0.2'\n    }, {\n      time: '0:1:3',\n      note: 'C3',\n      velocity: 95,\n      dur: '0.6'\n    }, {\n      time: '0:1:6',\n      note: 'C3',\n      velocity: 95,\n      dur: '0.3'\n    }, {\n      time: '0:2:1',\n      note: 'C3',\n      velocity: 95,\n      dur: '0.3'\n    }, {\n      time: '0:2:1',\n      note: 'C3',\n      velocity: 95,\n      dur: '0.3'\n    }, {\n      time: '0:2:1:1',\n      note: 'C#3',\n      velocity: 95,\n      dur: '0.3'\n    }, {\n      time: '0:2:2:1',\n      note: 'C#3',\n      velocity: 95,\n      dur: '0.3'\n    }, {\n      time: '0:2:4',\n      note: 'C#3',\n      velocity: 95,\n      dur: '0.3'\n    }, {\n      time: '0:3:1',\n      note: 'C#3',\n      velocity: 95,\n      dur: '0.6'\n    }]);\n    part.loop = true;\n    part.loopEnd = '0:3:1 ';\n    _this.state = {\n      autoFilter: {\n        name: 'autoFilter',\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        name: 'autoPanner',\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        name: 'autoWah',\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        name: 'bitCrusher',\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        name: 'chebyshev',\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        name: 'chorus',\n        effect: chorus,\n        wet: 0,\n        on: false,\n        frTemp: 0\n      },\n      convolver: {\n        name: 'convolver',\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        name: 'distortion',\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      effect: {\n        name: 'effect',\n        effect: effect,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        name: 'feedbackDelay',\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        name: 'feedbackEffect',\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        name: 'freeverb',\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        name: 'jcReverb',\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        name: 'phaser',\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        name: 'pingPongDelay',\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        name: 'pitchShift',\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        name: 'reverb',\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        name: 'stereoWidener',\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        name: 'tremolo',\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        name: 'vibrato',\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      partSynth: {\n        instrument: partSynth,\n        on: false\n      },\n      part: part,\n      tempo: 60,\n      volume: volume,\n      lastChange: Date.now()\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'toggleLoop', 'togglePart', 'changeEffectWetValue', 'changeFrequencyChorus', 'changeDistortionValue', 'changeBitCrusherValue', 'changeChorusValue', 'changeChorusFrequency', 'changeFreeverbDampening', 'changeFreeverbRoomSize', 'changeVibratoFrequency', 'changeVibratoDepth', 'changeEffectValue', 'changeChebyshevOrder', 'changeAutoPannerDepth', 'changeAutoPannerFrequency', 'changeStereoWidenerWidth', 'bpmChange', 'toggleEffect');\n\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"bpmTest\",\n    value: function bpmTest() {\n      console.log(Tone.Transport.bpm.value);\n    }\n  }, {\n    key: \"bpmChange\",\n    value: function bpmChange(value) {\n      var tempo = this.state.tempo;\n      tempo = Math.round(value);\n      Tone.Transport.bpm.value = tempo;\n      console.log('new bpm', Tone.Transport.bpm.value);\n      this.setState({\n        tempo: tempo\n      });\n    } // def SYNTH\n\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var tempo = this.state.tempo;\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n      Tone.Transport.bpm.value = tempo;\n      Tone.Transport.start();\n      console.log('start bpm', Tone.Transport.bpm.value);\n    }\n  }, {\n    key: \"togglePart\",\n    value: function togglePart() {\n      var _this$state = this.state,\n          partSynth = _this$state.partSynth,\n          part = _this$state.part,\n          tempo = _this$state.tempo;\n      var on = partSynth.on;\n      on ? part.stop() : part.start();\n      this.setState({\n        partSynth: {\n          on: !on\n        }\n      });\n      Tone.Transport.bpm.value = tempo;\n      Tone.Transport.start();\n      console.log('BPM NOW:', Tone.Transport.bpm.value);\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on ? value.toFixed(1) : value.toFixed(1);\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeBitCrusherValue\",\n    value: function changeBitCrusherValue(effectName, value) {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          wet = _this$state$bitCrushe.wet,\n          on = _this$state$bitCrushe.on;\n      effect.bits = value.toFixed(1);\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeChorusValue\",\n    value: function changeChorusValue(effectName, value) {\n      var _this$state$chorus = this.state.chorus,\n          effect = _this$state$chorus.effect,\n          wet = _this$state$chorus.wet,\n          on = _this$state$chorus.on;\n      effect.delayTime = value.toFixed(1);\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFreeverbDampening\",\n    value: function changeFreeverbDampening(effectName, value) {\n      var _this$state$freeverb = this.state.freeverb,\n          effect = _this$state$freeverb.effect,\n          wet = _this$state$freeverb.wet,\n          on = _this$state$freeverb.on;\n      effect.dampening.value = value.toFixed(1);\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFreeverbRoomSize\",\n    value: function changeFreeverbRoomSize(effectName, value) {\n      var _this$state$freeverb2 = this.state.freeverb,\n          effect = _this$state$freeverb2.effect,\n          wet = _this$state$freeverb2.wet,\n          on = _this$state$freeverb2.on;\n      effect.roomSize.value = value.toFixed(1);\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeChorusFrequency\",\n    value: function changeChorusFrequency(effectName, value) {\n      var _this$state$chorus2 = this.state.chorus,\n          effect = _this$state$chorus2.effect,\n          wet = _this$state$chorus2.wet,\n          on = _this$state$chorus2.on;\n      effect.frequency.value = value.toFixed(1);\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value.toFixed(1);\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFrequencyChorus\",\n    value: function changeFrequencyChorus(value) {\n      var _this$state$chorus3 = this.state.chorus,\n          effect = _this$state$chorus3.effect,\n          frTemp = _this$state$chorus3.frTemp,\n          on = _this$state$chorus3.on;\n      effect.frequency.value = value;\n      console.log(effect.frequency.value);\n      this.setState({\n        chorus: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayValue\",\n    value: function changeFeedbackDelayValue(effectName, value) {\n      var _this$state$feedbackD = this.state.feedbackDelay,\n          effect = _this$state$feedbackD.effect,\n          wet = _this$state$feedbackD.wet,\n          on = _this$state$feedbackD.on;\n      effect.maxDelay = value;\n      this.setState({\n        feedbackDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeVibratoDepth\",\n    value: function changeVibratoDepth(effectName, value) {\n      var _this$state$vibrato = this.state.vibrato,\n          effect = _this$state$vibrato.effect,\n          wet = _this$state$vibrato.wet,\n          on = _this$state$vibrato.on;\n      effect.depth.value = value.toFixed(1);\n      this.setState({\n        vibrato: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeVibratoFrequency\",\n    value: function changeVibratoFrequency(effectName, value) {\n      var _this$state$vibrato2 = this.state.vibrato,\n          effect = _this$state$vibrato2.effect,\n          wet = _this$state$vibrato2.wet,\n          on = _this$state$vibrato2.on;\n      effect.frequency.value = value.toFixed(1);\n      this.setState({\n        vibrato: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeChebyshevOrder\",\n    value: function changeChebyshevOrder(effectName, value) {\n      var _this$state$chebyshev = this.state.chebyshev,\n          effect = _this$state$chebyshev.effect,\n          wet = _this$state$chebyshev.wet,\n          on = _this$state$chebyshev.on;\n      effect.order = value.toFixed(1);\n      this.setState({\n        chebyshev: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoPannerFrequency\",\n    value: function changeAutoPannerFrequency(effectName, value) {\n      var _this$state$autoPanne = this.state.autoPanner,\n          effect = _this$state$autoPanne.effect,\n          wet = _this$state$autoPanne.wet,\n          on = _this$state$autoPanne.on;\n      effect.frequency.value = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoPannerDepth\",\n    value: function changeAutoPannerDepth(effectName, value) {\n      var _this$state$autoPanne2 = this.state.autoPanner,\n          effect = _this$state$autoPanne2.effect,\n          wet = _this$state$autoPanne2.wet,\n          on = _this$state$autoPanne2.on;\n      effect.depth.value = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeStereoWidenerWidth\",\n    value: function changeStereoWidenerWidth(effectName, value) {\n      var _this$state$stereoWid = this.state.stereoWidener,\n          effect = _this$state$stereoWid.effect,\n          wet = _this$state$stereoWid.wet,\n          on = _this$state$stereoWid.on;\n      effect.width.value = value;\n      this.setState({\n        stereoWidener: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectValue\",\n    value: function changeEffectValue(effectName, effectProperty, value) {\n      var _this$state$effectNam3 = this.state[effectName],\n          name = _this$state$effectNam3.name,\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n\n      if (effectProperty == 'order') {\n        value = Math.round(value);\n      }\n\n      effect[effectProperty] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          tempo = _this$state2.tempo,\n          chorus = _this$state2.chorus,\n          synth = _this$state2.synth,\n          partSynth = _this$state2.partSynth,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3,\n          loop4 = _this$state2.loop4;\n      var _toggleEffect = this.toggleEffect;\n      return React.createElement(\"section\", {\n        className: \"synthBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"startBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"titleBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754\n        },\n        __self: this\n      }, \" Get started making music\"), React.createElement(\"p\", {\n        className: \"infoBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, \"Press the buttons below to play \", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, \" presets \")), React.createElement(\"div\", {\n        className: \"Loops\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"loopBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: partSynth.on,\n        handleToggleClick: this.togglePart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"loopBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"loopBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"loopBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"loopBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        className: \"infoBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793\n        },\n        __self: this\n      }, \"Here you can find some basic settings. For\\xA0example, you can change loop \", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793\n        },\n        __self: this\n      }, \" BPM \")), React.createElement(\"p\", {\n        className: \"descriptionBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794\n        },\n        __self: this\n      }, \" BPM \"), \" or Beats Per Minute is the speed or pace of a given piece\"), React.createElement(Knob, {\n        min: \"0\",\n        max: \"220\",\n        value: tempo,\n        handleValueChange: this.bpmChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"effectsBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      }, React.createElement(BitCrusher, Object.assign({}, this.state.bitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('bitCrusher');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeBitCrusherValue: this.changeBitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      })), React.createElement(Chorus, Object.assign({}, this.state.chorus, {\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeChorusFrequency: this.changeChorusFrequency,\n        changeChorusValue: this.changeChorusValue,\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('chorus');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811\n        },\n        __self: this\n      })), React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        changeEffectValue: this.changeEffectValue,\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('distortion');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819\n        },\n        __self: this\n      })), React.createElement(Freeverb, Object.assign({}, this.state.freeverb, {\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFreeverbDampening: this.changeFreeverbDampening,\n        changeFreeverbRoomSize: this.changeFreeverbRoomSize,\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('freeverb');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827\n        },\n        __self: this\n      })), React.createElement(Vibrato, Object.assign({}, this.state.vibrato, {\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeVibratoDepth: this.changeVibratoDepth,\n        changeVibratoFrequency: this.changeVibratoFrequency,\n        changeEffectValue: this.changeEffectValue,\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('vibrato');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835\n        },\n        __self: this\n      })), React.createElement(Chebyshev, Object.assign({}, this.state.chebyshev, {\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeChebyshevOrder: this.changeChebyshevOrder,\n        changeEffectValue: this.changeEffectValue,\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('chebyshev');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844\n        },\n        __self: this\n      })), React.createElement(AutoPanner, Object.assign({}, this.state.autoPanner, {\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeAutoPannerFrequency: this.changeAutoPannerFrequency,\n        changeAutoPannerDepth: this.changeAutoPannerDepth,\n        changeEffectValue: this.changeEffectValue,\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('autoPanner');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852\n        },\n        __self: this\n      })), React.createElement(StereoWidener, Object.assign({}, this.state.stereoWidener, {\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeStereoWidenerWidth: this.changeStereoWidenerWidth,\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('stereoWidener');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/kotya/HSEADC2017_L3_M1/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","Slider","ToggleSwitch","PlaySwitch","Knob","Chorus","Reverb","AutoPanner","BitCrusher","Chebyshev","Distortion","FeedbackDelay","Freeverb","StereoWidener","Tremolo","Vibrato","Synth","props","defaultValue","synth","PolySynth","polyphony","volume","detune","voice","PanVol","autoFilter","AutoFilter","feedbackDelay","tremolo","distortion","autoPanner","autoWah","AutoWah","bitCrusher","chebyshev","chorus","convolver","Convolver","effect","Effect","feedbackEffect","FeedbackEffect","freeverb","jcReverb","JCReverb","phaser","Phaser","pingPongDelay","PingPongDelay","pitchShift","PitchShift","reverb","stereoWidener","vibrato","wet","value","chain","Master","loop1","Loop","time","triggerAttackRelease","loop2","loop3","loop4","partSynth","DuoSynth","vibratoAmount","vibratoRate","harmonicity","voice0","portamento","oscillator","type","filterEnvelope","attack","decay","sustain","release","envelope","voice1","part","Part","event","note","dur","velocity","loop","loopEnd","state","name","on","frTemp","instrument","tempo","lastChange","Date","now","bindAll","console","log","Transport","bpm","Math","round","setState","loopName","stop","start","effectName","toFixed","bits","delayTime","dampening","roomSize","frequency","maxDelay","depth","order","width","effectProperty","toggleEffect","togglePart","toggleLoop","bpmChange","changeEffectWetValue","changeBitCrusherValue","changeChorusFrequency","changeChorusValue","changeDistortionValue","changeEffectValue","changeFreeverbDampening","changeFreeverbRoomSize","changeVibratoDepth","changeVibratoFrequency","changeChebyshevOrder","changeAutoPannerFrequency","changeAutoPannerDepth","changeStereoWidenerWidth","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport Slider from '../components/controls/Slider'\nimport ToggleSwitch from '../components/controls/ToggleSwitch'\nimport PlaySwitch from '../components/controls/PlaySwitch'\nimport Knob from '../components/controls/Knob'\n\nimport Chorus from '../components/effects/Chorus'\nimport Reverb from '../components/effects/Reverb'\n// import AutoFilter from '../components/effects/AutoFilter'\nimport AutoPanner from '../components/effects/AutoPanner'\n// import AutoWah from '../components/effects/AutoWah'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport Chebyshev from '../components/effects/Chebyshev'\nimport Distortion from '../components/effects/Distortion'\nimport FeedbackDelay from '../components/effects/FeedbackDelay'\n// import FeedbackEffect from '../components/effects/FeedbackEffect'\nimport Freeverb from '../components/effects/Freeverb'\n// import JcReverb from '../components/effects/JcReverb'\n// import Phaser from '../components/effects/Phaser'\n// import PingPongDelay from '../components/effects/PingPongDelay'\n// import PitchShift from '../components/effects/PitchShift'\nimport StereoWidener from '../components/effects/StereoWidener'\nimport Tremolo from '../components/effects/Tremolo'\nimport Vibrato from '../components/effects/Vibrato'\n\n\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    // Sequencer with effects\n    const defaultValue = 0\n\n    let synth = new Tone.PolySynth(\n      {\n        polyphony : 4 ,\n        volume : 0 ,\n        detune : 0 ,\n        voice : Tone.Synth\n      }\n    )\n    let volume = new Tone.PanVol()\n\n    let autoFilter = new Tone.AutoFilter()\n    let feedbackDelay = new Tone.FeedbackDelay()\n    let tremolo = new Tone.Tremolo()\n    let distortion = new Tone.Distortion()\n    let autoPanner = new Tone.AutoPanner()\n    let autoWah = new Tone.AutoWah()\n    let bitCrusher = new Tone.BitCrusher()\n    let chebyshev = new Tone.Chebyshev()\n    let chorus = new Tone.Chorus()\n    let convolver = new Tone.Convolver()\n    let effect = new Tone.Effect()\n    let feedbackEffect = new Tone.FeedbackEffect()\n    let freeverb = new Tone.Freeverb()\n    let jcReverb = new Tone.JCReverb()\n    let phaser = new Tone.Phaser()\n    let pingPongDelay = new Tone.PingPongDelay()\n    let pitchShift = new Tone.PitchShift()\n    let reverb = new Tone.Reverb()\n    let stereoWidener = new Tone.StereoWidener()\n    let vibrato = new Tone.Vibrato()\n\n    autoFilter.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    distortion.wet.value = 0\n    effect.wet.value = 0\n    feedbackDelay.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    tremolo.wet.value = 0\n    vibrato.wet.value = 0\n\n    synth.chain(\n      volume,\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      effect,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    let loop1 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(['G4', 'D#3', 'D#2'], '0.3', time)\n    }, '0.3')\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('E#4', '0.3', time)\n    }, '0.3')\n\n    let loop3 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('G4', '8n', time) }, '0.9')\n\n    let loop4 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(['G4', 'D#3', 'D#2'], '0.3', time)\n    }, '0.3')\n\n    //part of SYNTH\n    let partSynth = new Tone.DuoSynth( {\n      vibratoAmount : 0.5 ,\n      vibratoRate : 5 ,\n      harmonicity : 1.5 ,\n      voice0 : {\n        volume : -10 ,\n        portamento : 0 ,\n        oscillator : {\n          type : 'sine'\n        } ,\n        filterEnvelope : {\n          attack : 0.01 ,\n          decay : 0 ,\n          sustain : 1 ,\n          release : 0.5\n        } ,\n        envelope : {\n          attack : 0.01 ,\n          decay : 0 ,\n          sustain : 1 ,\n          release : 0.5\n        }\n      } ,\n      voice1 : {\n        volume : -10 ,\n        portamento : 0 ,\n        oscillator : {\n          type : 'sine'\n        } ,\n        filterEnvelope : {\n          attack : 0.01 ,\n          decay : 0 ,\n          sustain : 1 ,\n          release : 0.5\n        } ,\n        envelope : {\n          attack : 0.01 ,\n          decay : 0 ,\n          sustain : 1 ,\n          release : 0.5\n        }\n      }\n    })\n\n    partSynth.chain(\n      volume,\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      effect,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    let part = new Tone.Part(\n      function(time, event) {\n        partSynth.triggerAttackRelease(event.note, event.dur, time)\n      },\n        [\n        {\n          time: '0:1:1',\n          note: 'G#3',\n          velocity: 95,\n          dur: '0.2'\n        },\n        {\n          time: '0:1:2',\n          note: 'G3',\n          velocity: 95,\n          dur: '0.2'\n        },\n        {\n          time: '0:1:2:1',\n          note: 'C3',\n          velocity: 95,\n          dur: '0.2'\n        },\n        {\n          time: '0:1:3',\n          note: 'C3',\n          velocity: 95,\n          dur: '0.6'\n        },\n        {\n          time: '0:1:6',\n          note: 'C3',\n          velocity: 95,\n          dur: '0.3'\n        },\n        {\n          time: '0:2:1',\n          note: 'C3',\n          velocity: 95,\n          dur: '0.3'\n        },\n        {\n          time: '0:2:1',\n          note: 'C3',\n          velocity: 95,\n          dur: '0.3'\n        },\n        {\n          time: '0:2:1:1',\n          note: 'C#3',\n          velocity: 95,\n          dur: '0.3'\n        },\n        {\n          time: '0:2:2:1',\n          note: 'C#3',\n          velocity: 95,\n          dur: '0.3'\n        },\n        {\n          time: '0:2:4',\n          note: 'C#3',\n          velocity: 95,\n          dur: '0.3'\n        },\n        {\n          time: '0:3:1',\n          note: 'C#3',\n          velocity: 95,\n          dur: '0.6'\n        },\n\n      ]\n    )\n\n    part.loop = true\n    part.loopEnd = '0:3:1 '\n\n\n    this.state = {\n      autoFilter: {\n        name: 'autoFilter',\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        name: 'autoPanner',\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        name: 'autoWah',\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        name: 'bitCrusher',\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        name: 'chebyshev',\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        name: 'chorus',\n        effect: chorus,\n        wet: 0,\n        on: false,\n        frTemp: 0\n      },\n      convolver: {\n        name: 'convolver',\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        name: 'distortion',\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      effect: {\n        name: 'effect',\n        effect: effect,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        name: 'feedbackDelay',\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        name: 'feedbackEffect',\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        name: 'freeverb',\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        name: 'jcReverb',\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        name: 'phaser',\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        name: 'pingPongDelay',\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        name: 'pitchShift',\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        name: 'reverb',\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        name: 'stereoWidener',\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        name: 'tremolo',\n        effect: tremolo,\n        wet: 0,\n        on: false,\n      },\n      vibrato: {\n        name: 'vibrato',\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      partSynth: {\n        instrument: partSynth,\n        on: false\n      },\n      part,\n      tempo: 60,\n      volume: volume,\n      lastChange: Date.now(),\n    }\n\n    _.bindAll(\n      this,\n      'toggleLoop',\n      'togglePart',\n      'changeEffectWetValue',\n      'changeFrequencyChorus',\n      'changeDistortionValue',\n      'changeBitCrusherValue',\n      'changeChorusValue',\n      'changeChorusFrequency',\n      'changeFreeverbDampening',\n      'changeFreeverbRoomSize',\n      'changeVibratoFrequency',\n      'changeVibratoDepth',\n      'changeEffectValue',\n      'changeChebyshevOrder',\n      'changeAutoPannerDepth',\n      'changeAutoPannerFrequency',\n      'changeStereoWidenerWidth',\n      'bpmChange',\n      'toggleEffect',\n    )\n  }\n\n  bpmTest() {\n    console.log(Tone.Transport.bpm.value)\n  }\n\n\n  bpmChange(value) {\n    let { tempo } = this.state\n    tempo = Math.round(value)\n    Tone.Transport.bpm.value = tempo\n    console.log('new bpm', Tone.Transport.bpm.value)\n\n    this.setState({\n      tempo\n    })\n  }\n  // def SYNTH\n  toggleLoop(loopName) {\n    let { tempo } = this.state\n    let { loop, on } = this.state[loopName]\n\n    on ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n\n    Tone.Transport.bpm.value = tempo\n    Tone.Transport.start()\n    console.log('start bpm', Tone.Transport.bpm.value)\n  }\n\n  togglePart() {\n    let { partSynth, part, tempo } = this.state\n    let { on } = partSynth\n\n    on ? part.stop() : part.start()\n\n    this.setState({\n      partSynth: {\n        on: !on\n      }\n    })\n\n    Tone.Transport.bpm.value = tempo\n    Tone.Transport.start()\n    console.log('BPM NOW:', Tone.Transport.bpm.value)\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n    effect.wet.value = on ? value.toFixed(1) : value.toFixed(1)\n\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: { effect, wet, on }\n    })\n  }\n\n  changeBitCrusherValue(effectName, value) {\n    let { effect, wet, on } = this.state.bitCrusher\n\n    effect.bits = value.toFixed(1)\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeChorusValue(effectName, value) {\n    let { effect, wet, on } = this.state.chorus\n\n    effect.delayTime = value.toFixed(1)\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFreeverbDampening(effectName, value) {\n    let { effect, wet, on } = this.state.freeverb\n\n    effect.dampening.value = value.toFixed(1)\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFreeverbRoomSize(effectName, value) {\n    let { effect, wet, on } = this.state.freeverb\n\n    effect.roomSize.value = value.toFixed(1)\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeChorusFrequency(effectName, value) {\n    let { effect, wet, on } = this.state.chorus\n\n    effect.frequency.value = value.toFixed(1)\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value.toFixed(1)\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFrequencyChorus(value) {\n    let { effect, frTemp, on } = this.state.chorus\n    effect.frequency.value = value\n    console.log(effect.frequency.value)\n\n    this.setState({\n      chorus: { effect, on }\n    })\n  }\n\n  changeFeedbackDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackDelay\n\n    effect.maxDelay = value\n\n    this.setState({\n      feedbackDelay: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeVibratoDepth(effectName, value) {\n    let { effect, wet, on } = this.state.vibrato\n\n    effect.depth.value =  value.toFixed(1)\n\n    this.setState({\n      vibrato: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeVibratoFrequency(effectName, value) {\n    let { effect, wet, on } = this.state.vibrato\n\n    effect.frequency.value =  value.toFixed(1)\n\n    this.setState({\n      vibrato: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeChebyshevOrder(effectName, value) {\n    let { effect, wet, on } = this.state.chebyshev\n\n    effect.order = value.toFixed(1)\n\n    this.setState({\n      chebyshev: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeAutoPannerFrequency(effectName, value) {\n    let { effect, wet, on } = this.state.autoPanner\n\n    effect.frequency.value = value\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeAutoPannerDepth(effectName, value) {\n    let { effect, wet, on } = this.state.autoPanner\n\n    effect.depth.value = value\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeStereoWidenerWidth(effectName, value) {\n    let { effect, wet, on } = this.state.stereoWidener\n\n    effect.width.value = value\n\n    this.setState({\n      stereoWidener: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: { effect, wet, on }\n    })\n  }\n\n  changeEffectValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n\n    if (effectProperty == 'order') {\n      value = Math.round(value)\n    }\n\n    effect[effectProperty] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let {\n      tempo,\n      chorus,\n      synth,\n      partSynth,\n      loop1,\n      loop2,\n      loop3,\n      loop4\n    } = this.state\n    let { toggleEffect } = this\n    return (\n      <section className=\"synthBody\">\n        <div className=\"startBlock\">\n          <h1  className=\"titleBlock\"> Get started making music</h1>\n          <p className=\"infoBlock\">Press the buttons below to play <em> presets </em></p>\n          <div className=\"Loops\">\n            <div className=\"loopBlock\" >\n              <PlaySwitch\n                name=\"play\"\n                value={partSynth.on}\n                handleToggleClick={this.togglePart}\n              />\n            </div>\n            <div className=\"loopBlock\" >\n              <PlaySwitch\n                name=\"play\"\n                value={loop1.on}\n                handleToggleClick={() => this.toggleLoop('loop1')}\n              />\n            </div>\n            <div className=\"loopBlock\" >\n              <PlaySwitch\n                name=\"play\"\n                value={loop2.on}\n                handleToggleClick={() => this.toggleLoop('loop2')}\n              />\n            </div>\n            <div className=\"loopBlock\" >\n              <PlaySwitch\n                name=\"play\"\n                value={loop3.on}\n                handleToggleClick={() => this.toggleLoop('loop3')}\n              />\n            </div>\n            <div className=\"loopBlock\" >\n              <PlaySwitch\n                name=\"play\"\n                value={loop4.on}\n                handleToggleClick={() => this.toggleLoop('loop4')}\n              />\n            </div>\n          </div>\n          <p className=\"infoBlock\">Here you can find some basic settings. For&nbsp;example, you can change loop <em> BPM </em></p>\n          <p className=\"descriptionBlock\"><em> BPM </em> or Beats Per Minute is the speed or pace of a given piece</p>\n          <Knob\n            min=\"0\"\n            max=\"220\"\n            value={tempo}\n            handleValueChange={this.bpmChange}\n          />\n        </div>\n        <div className=\"effectsBlock\">\n\n          <BitCrusher\n            {...this.state.bitCrusher}\n            toggleEffect={() => toggleEffect('bitCrusher')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeBitCrusherValue={this.changeBitCrusherValue}\n          />\n\n          <Chorus\n            {...this.state.chorus}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeChorusFrequency={this.changeChorusFrequency}\n            changeChorusValue={this.changeChorusValue}\n            toggleEffect={() => toggleEffect('chorus')}\n          />\n\n          <Distortion\n            {...this.state.distortion}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeDistortionValue={this.changeDistortionValue}\n            changeEffectValue={this.changeEffectValue}\n            toggleEffect={() => toggleEffect('distortion')}\n          />\n\n          <Freeverb\n            {...this.state.freeverb}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeFreeverbDampening={this.changeFreeverbDampening}\n            changeFreeverbRoomSize={this.changeFreeverbRoomSize}\n            toggleEffect={() => toggleEffect('freeverb')}\n          />\n\n          <Vibrato\n            {...this.state.vibrato}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeVibratoDepth={this.changeVibratoDepth}\n            changeVibratoFrequency={this.changeVibratoFrequency}\n            changeEffectValue={this.changeEffectValue}\n            toggleEffect={() => toggleEffect('vibrato')}\n          />\n\n          <Chebyshev\n            {...this.state.chebyshev}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeChebyshevOrder={this.changeChebyshevOrder}\n            changeEffectValue={this.changeEffectValue}\n            toggleEffect={() => toggleEffect('chebyshev')}\n          />\n\n          <AutoPanner\n            {...this.state.autoPanner}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeAutoPannerFrequency={this.changeAutoPannerFrequency}\n            changeAutoPannerDepth={this.changeAutoPannerDepth}\n            changeEffectValue={this.changeEffectValue}\n            toggleEffect={() => toggleEffect('autoPanner')}\n          />\n\n          <StereoWidener\n            {...this.state.stereoWidener}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeStereoWidenerWidth={this.changeStereoWidenerWidth}\n            toggleEffect={() => toggleEffect('stereoWidener')}\n          />\n        </div>\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}