{"ast":null,"code":"var _jsxFileName = \"/Users/kotya/HSEADC2017_L3_M1/app/javascript/components/effects/AutoPanner.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PlaySwitch from '../controls/PlaySwitch';\nimport ToggleSwitch from '../controls/ToggleSwitch';\nimport Slider from '../controls/Slider';\nimport Knob from '../controls/Knob';\nimport ButtonSet from '../controls/ButtonSet';\n\nvar AutoPanner =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoPanner, _React$Component);\n\n  function AutoPanner(props) {\n    _classCallCheck(this, AutoPanner);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AutoPanner).call(this, props));\n  }\n\n  _createClass(AutoPanner, [{\n    key: \"render\",\n    value: function render() {\n      var set = ['sine', 'square', 'triangle', 'sawtooth'];\n      var name = 'autoPanner';\n      var _this$props = this.props,\n          effect = _this$props.effect,\n          on = _this$props.on,\n          toggleEffect = _this$props.toggleEffect,\n          changeEffectWetValue = _this$props.changeEffectWetValue,\n          changeAutoPannerDepth = _this$props.changeAutoPannerDepth,\n          changeAutoPannerFrequency = _this$props.changeAutoPannerFrequency,\n          changeEffectValue = _this$props.changeEffectValue;\n      return React.createElement(\"div\", {\n        className: \"Effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"effectOn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(ToggleSwitch, {\n        value: \"AutoPanner\",\n        current: on,\n        handleClick: toggleEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, name)), React.createElement(\"div\", {\n        className: \"sliderBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"infoEffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Wet\"), React.createElement(\"p\", {\n        className: \"effectValue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, effect.wet.value)), React.createElement(Slider, {\n        name: name,\n        min: 0,\n        max: 1,\n        value: effect.wet,\n        handleValueChange: changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"infoEffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Frequency\"), React.createElement(\"p\", {\n        className: \"effectValue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, effect.frequency.value)), React.createElement(Slider, {\n        name: name,\n        property: \"frequency.value\",\n        min: 0,\n        max: 100,\n        value: effect.frequency.value,\n        handleValueChange: changeAutoPannerFrequency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"infoEffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Depth\"), React.createElement(\"p\", {\n        className: \"effectValue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, effect.depth.value)), React.createElement(Slider, {\n        name: name,\n        property: \"depth.value\",\n        min: 0,\n        max: 1,\n        on: on,\n        value: effect.depth.value,\n        handleValueChange: changeAutoPannerDepth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Type\"), React.createElement(ButtonSet, {\n        name: name,\n        property: \"type\",\n        set: set,\n        value: effect.type,\n        handleValueChange: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AutoPanner;\n}(React.Component);\n\nexport { AutoPanner as default };","map":{"version":3,"sources":["/Users/kotya/HSEADC2017_L3_M1/app/javascript/components/effects/AutoPanner.jsx"],"names":["React","PlaySwitch","ToggleSwitch","Slider","Knob","ButtonSet","AutoPanner","props","set","name","effect","on","toggleEffect","changeEffectWetValue","changeAutoPannerDepth","changeAutoPannerFrequency","changeEffectValue","wet","value","frequency","depth","type","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport PlaySwitch from '../controls/PlaySwitch'\nimport ToggleSwitch from '../controls/ToggleSwitch'\nimport Slider from '../controls/Slider'\nimport Knob from '../controls/Knob'\nimport ButtonSet from '../controls/ButtonSet'\n\nexport default class AutoPanner extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const set = ['sine', 'square', 'triangle', 'sawtooth']\n\n    let name = 'autoPanner'\n\n    const {\n      effect,\n      on,\n      toggleEffect,\n      changeEffectWetValue,\n      changeAutoPannerDepth,\n      changeAutoPannerFrequency,\n      changeEffectValue\n    } = this.props\n\n    return (\n      <div className=\"Effect\">\n        <div className=\"effectOn\">\n          <ToggleSwitch\n            value=\"AutoPanner\"\n            current={on}\n            handleClick={toggleEffect}\n          />\n          <h1>{name}</h1>\n        </div>\n        <div className=\"sliderBlock\">\n          <div className=\"slider\">\n            <div className=\"infoEffect\">\n               <p>Wet</p>\n               <p className=\"effectValue\">{effect.wet.value}</p>\n            </div>\n            <Slider\n              name={name}\n              min={0}\n              max={1}\n              value={effect.wet}\n              handleValueChange={changeEffectWetValue}\n            />\n          </div>\n          <div className=\"slider\">\n            <div className=\"infoEffect\">\n               <p>Frequency</p>\n               <p className=\"effectValue\">{effect.frequency.value}</p>\n            </div>\n            <Slider\n              name={name}\n              property=\"frequency.value\"\n              min={0}\n              max={100}\n              value={effect.frequency.value}\n              handleValueChange={changeAutoPannerFrequency}\n            />\n          </div>\n\n          <div className=\"slider\">\n            <div className=\"infoEffect\">\n               <p>Depth</p>\n               <p className=\"effectValue\">{effect.depth.value}</p>\n            </div>\n            <Slider\n              name={name}\n              property=\"depth.value\"\n              min={0}\n              max={1}\n              on={on}\n              value={effect.depth.value}\n              handleValueChange={changeAutoPannerDepth}\n            />\n          </div>\n        </div>\n\n        <div className=\"slider\">\n          <p>Type</p>\n          <ButtonSet\n            name={name}\n            property=\"type\"\n            set={set}\n            value={effect.type}\n            handleValueChange={changeEffectValue}\n          />\n        </div>\n\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}