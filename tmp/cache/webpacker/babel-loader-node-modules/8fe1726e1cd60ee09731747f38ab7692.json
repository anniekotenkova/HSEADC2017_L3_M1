{"ast":null,"code":"var _jsxFileName = \"/Users/kotya/sequencer/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport PlaySwitch from '../components/controls/PlaySwitch';\nimport ToggleSwitch from '../components/controls/ToggleSwitch';\nimport Slider from '../components/controls/Slider';\nimport Knob from '../components/controls/KnobParam';\nimport Distortion from '../components/effects/Distortion';\nimport BitCrusher from '../components/effects/BitCrusher';\nimport FeedbackEffect from '../components/effects/FeedbackEffect';\nimport Freeverb from '../components/effects/Freeverb';\nimport JCReverb from '../components/effects/JcReverb';\nimport Phaser from '../components/effects/Phaser';\nimport Tremolo from '../components/effects/Tremolo';\nimport Vibrato from '../components/effects/Vibrato';\nimport Chorus from '../components/effects/Chorus';\nimport FeedbackDelay from '../components/effects/FeedbackDelay';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var synth = new Tone.Synth();\n    var autoFilter = new Tone.AutoFilter();\n    var feedbackDelay = new Tone.FeedbackDelay();\n    var tremolo = new Tone.Tremolo();\n    var distortion = new Tone.Distortion();\n    var autoPanner = new Tone.AutoPanner();\n    var autoWah = new Tone.AutoWah();\n    var bitCrusher = new Tone.BitCrusher();\n    var chebyshev = new Tone.Chebyshev();\n    var chorus = new Tone.Chorus();\n    var convolver = new Tone.Convolver();\n    var effect = new Tone.Effect();\n    var feedbackEffect = new Tone.FeedbackEffect();\n    var freeverb = new Tone.Freeverb();\n    var jcReverb = new Tone.JCReverb();\n    var phaser = new Tone.Phaser();\n    var pingPongDelay = new Tone.PingPongDelay();\n    var pitchShift = new Tone.PitchShift();\n    var reverb = new Tone.Reverb();\n    var stereoWidener = new Tone.StereoWidener();\n    var vibrato = new Tone.Vibrato();\n    distortion.wet.value = 0;\n    autoFilter.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    tremolo.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    effect.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    vibrato.wet.value = 0; // Loop\n\n    var loop1 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(['G4', 'G3', 'Fb3'], '8n', time);\n    }, '4n');\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(['C4', 'E4', 'G4', 'B4'], '16n', time);\n    }, '2n');\n    var loop3 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('Ab3', '4n', time);\n    }, '2n');\n    var loop4 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('G4', '8n', time);\n    }, '8n');\n    var loop5 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('G3', '10n', time);\n    }, '4n');\n    synth.chain(distortion, autoFilter, feedbackDelay, tremolo, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, effect, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, vibrato, Tone.Master);\n    _this.state = {\n      lastChange: Date.now(),\n      randomDelay: 100,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      effect: {\n        effect: effect,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      loop5: {\n        loop: loop5,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), // 'getRandomArbitrary',\n    // 'generateRandom',\n    'toggleLoop', 'toggleEffect', 'changeEffectWetValue', 'changeDistortionValue', 'changeBitCrusherValue', 'changeFeedbackEffectValue', 'changeFreeverbRoomSizeValue', 'changeFreeverbDampeningValue', 'changeJcReverbValue', 'changePhaserFrequencyValue', 'changeFeedbackDelayValue', 'changeTremoloDepthValue', 'changeVibratoDepthValue', 'changeEffect');\n\n    Tone.Transport.bpm.value = 110;\n    Tone.Transport.start();\n    return _this;\n  } // componentDidMount() {\n  //   this.generateRandom()\n  // }\n  //\n  // getRandomArbitrary(min, max) {\n  //   return Math.floor(Math.random() * (max - min)) + min\n  // }\n  //\n  // generateRandom() {\n  //   const { lastChange, randomDelay } = this.state\n  //\n  //   if (Data.now() - lastChange >= randomDelay) {\n  //     this.setState({\n  //       lastChange: Date.now(),\n  //       randomDelay: this.getRandomArbitrary(100, 3000)\n  //     })\n  //     // this.generateRandom()\n  //   }\n  // }\n\n\n  _createClass(Synth, [{\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      console.log(this.state[effectName]);\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeEffect\",\n    value: function changeEffect(effectName, paramName, increment, value) {\n      var effect = this.state[effectName];\n\n      if (typeof effect[\"\".concat(paramName)] == 'object') {\n        effect[\"\".concat(paramName)].value = value / increment;\n      } else if (typeof effect[\"\".concat(paramName)] == 'string') {\n        effect[\"\".concat(paramName)] = value;\n      } else {\n        effect[\"\".concat(paramName)] = value / increment;\n      }\n    }\n  }, {\n    key: \"changeBitCrusherValue\",\n    value: function changeBitCrusherValue(effectName, value) {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          wet = _this$state$bitCrushe.wet,\n          on = _this$state$bitCrushe.on;\n      effect.bits = Math.round(value);\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackEffectValue\",\n    value: function changeFeedbackEffectValue(effectName, value) {\n      var _this$state$feedbackE = this.state.feedbackEffect,\n          effect = _this$state$feedbackE.effect,\n          wet = _this$state$feedbackE.wet,\n          on = _this$state$feedbackE.on;\n      console.log(this.state.feedbackEffect);\n      effect.feedback.value = value;\n      this.setState({\n        feedbackEffect: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFreeverbRoomSizeValue\",\n    value: function changeFreeverbRoomSizeValue(effectName, value) {\n      var _this$state$freeverb = this.state.freeverb,\n          effect = _this$state$freeverb.effect,\n          wet = _this$state$freeverb.wet,\n          on = _this$state$freeverb.on;\n      effect.roomSize.value = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFreeverbDampeningValue\",\n    value: function changeFreeverbDampeningValue(effectName, value) {\n      var _this$state$freeverb2 = this.state.freeverb,\n          effect = _this$state$freeverb2.effect,\n          wet = _this$state$freeverb2.wet,\n          on = _this$state$freeverb2.on;\n      effect.dampening.value = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayValue\",\n    value: function changeFeedbackDelayValue(effectName, value) {\n      var _this$state$feedbackD = this.state.feedbackDelay,\n          effect = _this$state$feedbackD.effect,\n          wet = _this$state$feedbackD.wet,\n          on = _this$state$feedbackD.on;\n      effect.maxDelay = value;\n      this.setState({\n        feedbackDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeJcReverbValue\",\n    value: function changeJcReverbValue(effectName, value) {\n      var _this$state$jcReverb = this.state.jcReverb,\n          effect = _this$state$jcReverb.effect,\n          wet = _this$state$jcReverb.wet,\n          on = _this$state$jcReverb.on;\n      effect.roomSize.value = value;\n      this.setState({\n        jcReverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changePhaserFrequencyValue\",\n    value: function changePhaserFrequencyValue(effectName, value) {\n      var _this$state$phaser = this.state.phaser,\n          effect = _this$state$phaser.effect,\n          wet = _this$state$phaser.wet,\n          on = _this$state$phaser.on;\n      console.log(value);\n      effect.frequency.value = value;\n      this.setState({\n        phaser: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeTremoloDepthValue\",\n    value: function changeTremoloDepthValue(effectName, value) {\n      var _this$state$tremolo = this.state.tremolo,\n          effect = _this$state$tremolo.effect,\n          wet = _this$state$tremolo.wet,\n          on = _this$state$tremolo.on;\n      console.log(value);\n      effect.depth.value = value;\n      this.setState({\n        tremolo: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeVibratoDepthValue\",\n    value: function changeVibratoDepthValue(effectName, value) {\n      var _this$state$vibrato = this.state.vibrato,\n          effect = _this$state$vibrato.effect,\n          wet = _this$state$vibrato.wet,\n          on = _this$state$vibrato.on;\n      effect.depth.value = value;\n      this.setState({\n        vibrato: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeChorusValue\",\n    value: function changeChorusValue(effectName, value) {\n      var _this$state$chorus = this.state.chorus,\n          effect = _this$state$chorus.effect,\n          wet = _this$state$chorus.wet,\n          on = _this$state$chorus.on;\n      effect.delayTime.value = value;\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          synth = _this$state.synth,\n          loop1 = _this$state.loop1,\n          loop2 = _this$state.loop2,\n          loop3 = _this$state.loop3,\n          loop4 = _this$state.loop4,\n          loop5 = _this$state.loop5;\n      var _toggleEffect = this.toggleEffect;\n      return React.createElement(\"div\", {\n        className: \"Container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pageBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"loopBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"playLoop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"playLoop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"playLoop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"playLoop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"playLoop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop5.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop5');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"pageBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"setBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('distortion');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"setBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(BitCrusher, Object.assign({}, this.state.bitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('bitCrusher');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeBitCrusherValue: this.changeBitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"setBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, React.createElement(Freeverb, Object.assign({\n        Effect: true\n      }, this.state.freeverb, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('freeverb');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFreeverbRoomSizeValue: this.changeFreeverbRoomSizeValue,\n        changeFreeverbDampeningValue: this.changeFreeverbDampeningValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"setBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, React.createElement(JCReverb, Object.assign({\n        Effect: true\n      }, this.state.jcReverb, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('jcReverb');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeJcReverbValue: this.changeJcReverbValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"setBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, React.createElement(Phaser, Object.assign({\n        Effect: true\n      }, this.state.phaser, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('phaser');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changePhaserFrequencyValue: this.changePhaserFrequencyValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"setBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, React.createElement(Tremolo, Object.assign({\n        Effect: true\n      }, this.state.tremolo, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('tremolo');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeTremoloDepthValue: this.changeTremoloDepthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"setBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, React.createElement(Chorus, {\n        handler: this.changeEffect,\n        value: this.state.chorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"setBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, React.createElement(Vibrato, Object.assign({\n        Effect: true\n      }, this.state.vibrato, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('vibrato');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeVibratoDepthValue: this.changeVibratoDepthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"setBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }, React.createElement(FeedbackDelay, Object.assign({}, this.state.feedbackDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('feedbackDelay');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFeedbackDelayValue: this.changeFeedbackDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/kotya/sequencer/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","ToggleSwitch","Slider","Knob","Distortion","BitCrusher","FeedbackEffect","Freeverb","JCReverb","Phaser","Tremolo","Vibrato","Chorus","FeedbackDelay","Synth","props","synth","autoFilter","AutoFilter","feedbackDelay","tremolo","distortion","autoPanner","AutoPanner","autoWah","AutoWah","bitCrusher","chebyshev","Chebyshev","chorus","convolver","Convolver","effect","Effect","feedbackEffect","freeverb","jcReverb","phaser","pingPongDelay","PingPongDelay","pitchShift","PitchShift","reverb","Reverb","stereoWidener","StereoWidener","vibrato","wet","value","loop1","Loop","time","triggerAttackRelease","loop2","loop3","loop4","loop5","chain","Master","state","lastChange","Date","now","randomDelay","on","instrument","loop","bindAll","Transport","bpm","start","loopName","stop","setState","effectName","console","log","paramName","increment","bits","Math","round","feedback","roomSize","dampening","maxDelay","frequency","depth","delayTime","toggleEffect","toggleLoop","changeEffectWetValue","changeDistortionValue","changeBitCrusherValue","changeFreeverbRoomSizeValue","changeFreeverbDampeningValue","changeJcReverbValue","changePhaserFrequencyValue","changeTremoloDepthValue","changeEffect","changeVibratoDepthValue","changeFeedbackDelayValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport PlaySwitch from '../components/controls/PlaySwitch'\nimport ToggleSwitch from '../components/controls/ToggleSwitch'\nimport Slider from '../components/controls/Slider'\nimport Knob from '../components/controls/KnobParam'\n\nimport Distortion from '../components/effects/Distortion'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport FeedbackEffect from '../components/effects/FeedbackEffect'\nimport Freeverb from '../components/effects/Freeverb'\nimport JCReverb from '../components/effects/JcReverb'\nimport Phaser from '../components/effects/Phaser'\nimport Tremolo from '../components/effects/Tremolo'\nimport Vibrato from '../components/effects/Vibrato'\nimport Chorus from '../components/effects/Chorus'\nimport FeedbackDelay from '../components/effects/FeedbackDelay'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let synth = new Tone.Synth()\n\n    let autoFilter = new Tone.AutoFilter()\n    let feedbackDelay = new Tone.FeedbackDelay()\n    let tremolo = new Tone.Tremolo()\n    let distortion = new Tone.Distortion()\n    let autoPanner = new Tone.AutoPanner()\n    let autoWah = new Tone.AutoWah()\n    let bitCrusher = new Tone.BitCrusher()\n    let chebyshev = new Tone.Chebyshev()\n    let chorus = new Tone.Chorus()\n    let convolver = new Tone.Convolver()\n    let effect = new Tone.Effect()\n    let feedbackEffect = new Tone.FeedbackEffect()\n    let freeverb = new Tone.Freeverb()\n    let jcReverb = new Tone.JCReverb()\n    let phaser = new Tone.Phaser()\n    let pingPongDelay = new Tone.PingPongDelay()\n    let pitchShift = new Tone.PitchShift()\n    let reverb = new Tone.Reverb()\n    let stereoWidener = new Tone.StereoWidener()\n    let vibrato = new Tone.Vibrato()\n\n    distortion.wet.value = 0\n    autoFilter.wet.value = 0\n    feedbackDelay.wet.value = 0\n    tremolo.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    effect.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    vibrato.wet.value = 0\n\n\n    // Loop\n    let loop1 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(['G4', 'G3', 'Fb3'], '8n', time)\n    }, '4n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(['C4', 'E4', 'G4', 'B4'], '16n', time)\n    }, '2n')\n\n\n    let loop3 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('Ab3', '4n', time)\n    }, '2n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('G4', '8n', time)\n    }, '8n')\n\n    let loop5 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('G3', '10n', time)\n    }, '4n')\n\n    synth.chain(\n      distortion,\n      autoFilter,\n      feedbackDelay,\n      tremolo,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      effect,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      vibrato,\n      Tone.Master\n    )\n\n    this.state = {\n      lastChange: Date.now(),\n      randomDelay: 100,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      effect: {\n        effect: effect,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      loop5: {\n        loop: loop5,\n        on: false\n      }\n    }\n\n    _.bindAll(\n      this,\n      // 'getRandomArbitrary',\n      // 'generateRandom',\n      'toggleLoop',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeDistortionValue',\n      'changeBitCrusherValue',\n      'changeFeedbackEffectValue',\n      'changeFreeverbRoomSizeValue',\n      'changeFreeverbDampeningValue',\n      'changeJcReverbValue',\n      'changePhaserFrequencyValue',\n      'changeFeedbackDelayValue',\n      'changeTremoloDepthValue',\n      'changeVibratoDepthValue',\n      'changeEffect'\n    )\n\n    Tone.Transport.bpm.value = 110\n    Tone.Transport.start()\n  }\n\n  // componentDidMount() {\n  //   this.generateRandom()\n  // }\n  //\n  // getRandomArbitrary(min, max) {\n  //   return Math.floor(Math.random() * (max - min)) + min\n  // }\n  //\n  // generateRandom() {\n  //   const { lastChange, randomDelay } = this.state\n  //\n  //   if (Data.now() - lastChange >= randomDelay) {\n  //     this.setState({\n  //       lastChange: Date.now(),\n  //       randomDelay: this.getRandomArbitrary(100, 3000)\n  //     })\n  //     // this.generateRandom()\n  //   }\n  // }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName]\n\n    console.log(this.state[effectName])\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffect(effectName, paramName, increment, value) {\n    let effect = this.state[effectName]\n    if (typeof effect[`${paramName}`] == 'object') {\n      effect[`${paramName}`].value = value / increment\n    } else if (typeof effect[`${paramName}`] == 'string') {\n      effect[`${paramName}`] = value\n    } else {\n      effect[`${paramName}`] = value / increment\n    }\n  }\n\n  changeBitCrusherValue(effectName, value) {\n    let { effect, wet, on } = this.state.bitCrusher\n\n    effect.bits = Math.round(value)\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFeedbackEffectValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackEffect\n    console.log(this.state.feedbackEffect)\n\n    effect.feedback.value = value\n\n    this.setState({\n      feedbackEffect: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFreeverbRoomSizeValue(effectName, value) {\n    let { effect, wet, on } = this.state.freeverb\n\n    effect.roomSize.value = value\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFreeverbDampeningValue(effectName, value) {\n    let { effect, wet, on } = this.state.freeverb\n\n    effect.dampening.value = value\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFeedbackDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackDelay\n\n    effect.maxDelay = value\n\n    this.setState({\n      feedbackDelay: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeJcReverbValue(effectName, value) {\n    let { effect, wet, on } = this.state.jcReverb\n\n    effect.roomSize.value = value\n\n    this.setState({\n      jcReverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changePhaserFrequencyValue(effectName, value) {\n    let { effect, wet, on } = this.state.phaser\n\n    console.log(value)\n\n    effect.frequency.value = value\n\n    this.setState({\n      phaser: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeTremoloDepthValue(effectName, value) {\n    let { effect, wet, on } = this.state.tremolo\n\n    console.log(value)\n\n    effect.depth.value = value\n\n    this.setState({\n      tremolo: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeVibratoDepthValue(effectName, value) {\n    let { effect, wet, on } = this.state.vibrato\n\n    effect.depth.value = value\n\n    this.setState({\n      vibrato: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeChorusValue(effectName, value) {\n    let { effect, wet, on } = this.state.chorus\n\n    effect.delayTime.value = value\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let { synth, loop1, loop2, loop3, loop4, loop5 } = this.state\n    let { toggleEffect } = this\n    return (\n      <div className=\"Container\">\n        <div className=\"pageBlock\">\n          <div className=\"loopBlock\">\n            <div className=\"playLoop\">\n              <PlaySwitch\n                name=\"play\"\n                value={loop1.on}\n                handleToggleClick={() => this.toggleLoop('loop1')}\n              />\n            </div>\n            <div className=\"playLoop\">\n              <PlaySwitch\n                name=\"play\"\n                value={loop2.on}\n                handleToggleClick={() => this.toggleLoop('loop2')}\n              />\n            </div>\n            <div className=\"playLoop\">\n              <PlaySwitch\n                name=\"play\"\n                value={loop3.on}\n                handleToggleClick={() => this.toggleLoop('loop3')}\n              />\n            </div>\n            <div className=\"playLoop\">\n              <PlaySwitch\n                name=\"play\"\n                value={loop4.on}\n                handleToggleClick={() => this.toggleLoop('loop4')}\n              />\n            </div>\n            <div className=\"playLoop\">\n              <PlaySwitch\n                name=\"play\"\n                value={loop5.on}\n                handleToggleClick={() => this.toggleLoop('loop5')}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"pageBlock\">\n          <div className=\"setBlock\">\n            <Distortion\n              {...this.state.distortion}\n              toggleEffect={() => toggleEffect('distortion')}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeDistortionValue={this.changeDistortionValue}\n            />\n          </div>\n          <div className=\"setBlock\">\n            <BitCrusher\n              {...this.state.bitCrusher}\n              toggleEffect={() => toggleEffect('bitCrusher')}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeBitCrusherValue={this.changeBitCrusherValue}\n            />\n          </div>\n          <div className=\"setBlock\">\n            <Freeverb\n              Effect\n              {...this.state.freeverb}\n              toggleEffect={() => toggleEffect('freeverb')}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeFreeverbRoomSizeValue={this.changeFreeverbRoomSizeValue}\n              changeFreeverbDampeningValue={this.changeFreeverbDampeningValue}\n            />\n          </div>\n          <div className=\"setBlock\">\n            <JCReverb\n              Effect\n              {...this.state.jcReverb}\n              toggleEffect={() => toggleEffect('jcReverb')}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeJcReverbValue={this.changeJcReverbValue}\n            />\n          </div>\n          <div className=\"setBlock\">\n            <Phaser\n              Effect\n              {...this.state.phaser}\n              toggleEffect={() => toggleEffect('phaser')}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changePhaserFrequencyValue={this.changePhaserFrequencyValue}\n            />\n          </div>\n          <div className=\"setBlock\">\n            <Tremolo\n              Effect\n              {...this.state.tremolo}\n              toggleEffect={() => toggleEffect('tremolo')}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeTremoloDepthValue={this.changeTremoloDepthValue}\n            />\n          </div>\n          <div className=\"setBlock\">\n              <Chorus handler={this.changeEffect} value={this.state.chorus} />\n          </div>\n          <div className=\"setBlock\">\n            <Vibrato\n              Effect\n              {...this.state.vibrato}\n              toggleEffect={() => toggleEffect('vibrato')}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeVibratoDepthValue={this.changeVibratoDepthValue}\n            />\n          </div>\n          <div className=\"setBlock\">\n            <FeedbackDelay\n              {...this.state.feedbackDelay}\n              toggleEffect={() => toggleEffect('feedbackDelay')}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeFeedbackDelayValue={this.changeFeedbackDelayValue}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}