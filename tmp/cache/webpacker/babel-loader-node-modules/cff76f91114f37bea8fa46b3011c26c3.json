{"ast":null,"code":"var _jsxFileName = \"/Users/kotya/sequencer/app/javascript/components/effects/Reverb.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport Slider from '../controls/Slider';\nimport BpmSlider from '../controls/BpmSlider';\nimport ToggleSwitch from '../controls/ToggleSwitch';\nimport PlaySwitch from '../controls/PlaySwitch';\nimport Knob from '../controls/Knob';\n\nvar Reverb =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Reverb, _React$Component);\n\n  function Reverb(props) {\n    _classCallCheck(this, Reverb);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Reverb).call(this, props));\n  }\n\n  _createClass(Reverb, [{\n    key: \"render\",\n    value: function render() {\n      var name = 'reverb';\n      var _this$props = this.props,\n          effect = _this$props.effect,\n          on = _this$props.on,\n          changeEffectWetValue = _this$props.changeEffectWetValue,\n          changeDecayReverb = _this$props.changeDecayReverb,\n          changePreDelayReverb = _this$props.changePreDelayReverb,\n          toggleEffect = _this$props.toggleEffect;\n      return React.createElement(\"div\", {\n        className: \"Effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"effectOn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(ToggleSwitch, {\n        current: on,\n        handleClick: toggleEffect,\n        value: \"Reverb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Reverb\")), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Wet\"), React.createElement(Slider, {\n        name: name,\n        min: \"0\",\n        max: \"1\",\n        value: effect.wet.value,\n        handleValueChange: changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"knobList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"knobform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Decay\"), React.createElement(Knob, {\n        min: \"0\",\n        max: \"100\",\n        value: effect.decay,\n        handleValueChange: changeDecayReverb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"knobform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"PreDelay\"), React.createElement(Knob, {\n        min: \"0\",\n        max: \"100\",\n        value: effect.preDelay,\n        handleValueChange: changePreDelayReverb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Reverb;\n}(React.Component);\n\nexport { Reverb as default };","map":{"version":3,"sources":["/Users/kotya/sequencer/app/javascript/components/effects/Reverb.jsx"],"names":["React","Slider","BpmSlider","ToggleSwitch","PlaySwitch","Knob","Reverb","props","name","effect","on","changeEffectWetValue","changeDecayReverb","changePreDelayReverb","toggleEffect","wet","value","decay","preDelay","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;IAEqBC,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,+EACXA,KADW;AAElB;;;;6BAEQ;AACP,UAAIC,IAAI,GAAG,QAAX;AADO,wBASH,KAAKD,KATF;AAAA,UAGLE,MAHK,eAGLA,MAHK;AAAA,UAILC,EAJK,eAILA,EAJK;AAAA,UAKLC,oBALK,eAKLA,oBALK;AAAA,UAMLC,iBANK,eAMLA,iBANK;AAAA,UAOLC,oBAPK,eAOLA,oBAPK;AAAA,UAQLC,YARK,eAQLA,YARK;AAUP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,OAAO,EAAEJ,EADX;AAEE,QAAA,WAAW,EAAEI,YAFf;AAGE,QAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CADF,EASE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEN,IADR;AAEE,QAAA,GAAG,EAAC,GAFN;AAGE,QAAA,GAAG,EAAC,GAHN;AAIE,QAAA,KAAK,EAAEC,MAAM,CAACM,GAAP,CAAWC,KAJpB;AAKE,QAAA,iBAAiB,EAAEL,oBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CATF,EAmBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAC,GADN;AAEE,QAAA,GAAG,EAAC,KAFN;AAGE,QAAA,KAAK,EAAEF,MAAM,CAACQ,KAHhB;AAIE,QAAA,iBAAiB,EAAEL,iBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAUE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAC,GADN;AAEE,QAAA,GAAG,EAAC,KAFN;AAGE,QAAA,KAAK,EAAEH,MAAM,CAACS,QAHhB;AAIE,QAAA,iBAAiB,EAAEL,oBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAVF,CAnBF,CADF;AA0CD;;;;EAzDiCb,KAAK,CAACmB,S;;SAArBb,M","sourcesContent":["import React from 'react'\n\nimport Slider from '../controls/Slider'\nimport BpmSlider from '../controls/BpmSlider'\nimport ToggleSwitch from '../controls/ToggleSwitch'\nimport PlaySwitch from '../controls/PlaySwitch'\nimport Knob from '../controls/Knob'\n\nexport default class Reverb extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    let name = 'reverb'\n    const {\n      effect,\n      on,\n      changeEffectWetValue,\n      changeDecayReverb,\n      changePreDelayReverb,\n      toggleEffect,\n    } = this.props\n    return (\n      <div className=\"Effect\">\n        <div className=\"effectOn\">\n          <ToggleSwitch\n            current={on}\n            handleClick={toggleEffect}\n            value=\"Reverb\"\n          />\n          <h1>Reverb</h1>\n        </div>\n        <div className=\"slider\">\n          <p>Wet</p>\n          <Slider\n            name={name}\n            min=\"0\"\n            max=\"1\"\n            value={effect.wet.value}\n            handleValueChange={changeEffectWetValue}\n          />\n        </div>\n        <div className=\"knobList\">\n          <div className=\"knobform\">\n            <p>Decay</p>\n            <Knob\n              min=\"0\"\n              max=\"100\"\n              value={effect.decay}\n              handleValueChange={changeDecayReverb}\n            />\n          </div>\n          <div className=\"knobform\">\n            <p>PreDelay</p>\n            <Knob\n              min=\"0\"\n              max=\"100\"\n              value={effect.preDelay}\n              handleValueChange={changePreDelayReverb}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}