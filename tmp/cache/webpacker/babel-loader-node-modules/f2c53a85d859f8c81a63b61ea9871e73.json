{"ast":null,"code":"var _jsxFileName = \"/Users/kotya/sequencer/app/javascript/components/controls/PrettoSlider.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: 300 + theme.spacing(3) * 2,\n      padding: theme.spacing(3)\n    },\n    margin: {\n      height: theme.spacing(3)\n    }\n  };\n});\n\nfunction ValueLabelComponent(props) {\n  var children = props.children,\n      open = props.open,\n      value = props.value;\n  var popperRef = React.useRef(null);\n  React.useEffect(function () {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n  return React.createElement(Tooltip, {\n    PopperProps: {\n      popperRef: popperRef\n    },\n    open: open,\n    enterTouchDelay: 0,\n    placement: \"top\",\n    title: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, children);\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired\n};\nvar PrettoSlider = withStyles({\n  root: {\n    color: '#52af77',\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit'\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)'\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  }\n})(Slider);\nexport default function CustomizedSlider() {\n  var classes = useStyles();\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(PrettoSlider, {\n    valueLabelDisplay: \"auto\",\n    \"aria-label\": \"pretto slider\",\n    defaultValue: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/kotya/sequencer/app/javascript/components/controls/PrettoSlider.jsx"],"names":["React","PropTypes","withStyles","makeStyles","Paper","Slider","Typography","Tooltip","useStyles","theme","root","width","spacing","padding","margin","height","ValueLabelComponent","props","children","open","value","popperRef","useRef","useEffect","current","update","propTypes","element","isRequired","bool","number","PrettoSlider","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","CustomizedSlider","classes"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 300 + theme.spacing(3) * 2,\n    padding: theme.spacing(3),\n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  const popperRef = React.useRef(null);\n  React.useEffect(() => {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n\n  return (\n    <Tooltip\n      PopperProps={{\n        popperRef,\n      }}\n      open={open}\n      enterTouchDelay={0}\n      placement=\"top\"\n      title={value}\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nexport default function CustomizedSlider() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={20} />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}