{"ast":null,"code":"'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.trackPosition = exports.toRgbaString = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (_typeof(call) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + _typeof(superClass));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar toRgbaString = exports.toRgbaString = function toRgbaString(rgbaObject) {\n  return 'rgba(' + rgbaObject.r + ', ' + rgbaObject.g + ', ' + rgbaObject.b + ', ' + rgbaObject.a + ')';\n};\n\nvar trackPosition = exports.trackPosition = function trackPosition(_ref) {\n  var thumbSize = _ref.thumbSize,\n      height = _ref.height;\n  return {\n    top: (thumbSize - Math.min(height, thumbSize)) / 2,\n    height: height\n  };\n};\n\nvar baseStyles = {\n  rootStyle: '\\n    input[type=\\'range\\']::-moz-focus-outer {\\n      border: 0;\\n    }\\n    input[type=range]::-ms-track {\\n      width:100%;\\n      height:100%;\\n\\n      -webkit-appearance:none;\\n      margin:0px;\\n      padding:0px;\\n      border:0 none;\\n\\n      background:transparent;\\n      color:transparent;\\n      overflow:visible;\\n    }\\n\\n    input[type=range]::-moz-range-track {\\n      width:100%;\\n      height:100%;\\n\\n      -moz-appearance:none;\\n      margin:0px;\\n      padding:0px;\\n      border:0 none;\\n\\n      background:transparent;\\n      color:transparent;\\n      overflow:visible;\\n    }\\n\\n    input[type=range] {\\n      cursor: pointer;\\n\\n      -webkit-appearance:none;\\n      padding:0px;\\n      border:0 none;\\n\\n      background:transparent;\\n      color:transparent;\\n      overflow:visible;\\n    }\\n\\n    input[type=range]:focus::-webkit-slider-runnable-track {\\n      background:transparent;\\n      border:transparent;\\n    }\\n\\n    input[type=range]:focus {\\n      outline: none;\\n    }\\n\\n    input[type=range]::-ms-thumb {\\n      width:12px;\\n      height:12px;\\n\\n      border-radius:0px;\\n      border:0 none;\\n      background:transparent;\\n    }\\n    input[type=range]::-moz-range-thumb {\\n      width:12px;\\n      height:12px;\\n\\n      border-radius:0px;\\n      border:0 none;\\n      background:transparent;\\n    }\\n    input[type=range]::-webkit-slider-thumb {\\n      width:12px;\\n      height:12px;\\n\\n      border-radius:0px;\\n      border:0 none;\\n      background:transparent;\\n      -webkit-appearance:none;\\n    }\\n\\n    input[type=range]::-ms-fill-lower {\\n      background:transparent;\\n      border:0 none;\\n    }\\n    input[type=range]::-ms-fill-upper {\\n      background:transparent;\\n      border:0 none;\\n    }\\n    input[type=range]::-ms-tooltip {\\n      display: none;\\n    }',\n  baseDiv: {\n    border: '0 none',\n    position: 'relative',\n    left: 0,\n    top: 0,\n    overflow: 'visible'\n  },\n  track: {\n    border: 0,\n    position: 'absolute',\n    width: '100%'\n  },\n  fill: {\n    border: 0,\n    position: 'absolute',\n    pointerEvents: 'none'\n  },\n  thumb: {\n    position: 'absolute',\n    top: 0,\n    border: '0 none',\n    padding: 0,\n    margin: 0,\n    textAlign: 'center',\n    pointerEvents: 'none',\n    boxShadow: '0 0 3px black'\n  },\n  input: {\n    top: 0,\n    WebkitAppearance: 'none',\n    background: 'transparent',\n    position: 'absolute',\n    left: 0,\n    overflow: 'visible',\n    zIndex: 100\n  }\n};\n\nvar Range = function (_React$Component) {\n  _inherits(Range, _React$Component);\n\n  function Range() {\n    var _ref2;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Range);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Range.__proto__ || Object.getPrototypeOf(Range)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {\n      value: 0\n    }, _this.onChange = function (e) {\n      if (!_this.props.readOnly) {\n        var newVal = parseInt(e.nativeEvent ? e.nativeEvent.target.value : e, 10);\n\n        _this.setState({\n          value: newVal\n        });\n\n        _this.props.onChange && _this.props.onChange(newVal);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Range, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        value: nextProps.value\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          value = _props.value,\n          min = _props.min,\n          max = _props.max,\n          thumbSize = _props.thumbSize,\n          width = _props.width,\n          trackColor = _props.trackColor,\n          height = _props.height,\n          fillColor = _props.fillColor,\n          hideThumb = _props.hideThumb,\n          thumbColor = _props.thumbColor;\n      var val = Math.min(max, this.state.value || value);\n      var percentProgress = val / (max - min);\n      var componentHeight = Math.max(height, thumbSize);\n      return _react2[\"default\"].createElement('div', {\n        style: {\n          width: width\n        }\n      }, _react2[\"default\"].createElement('div', {\n        id: 'rrp-baseDiv',\n        style: _extends({}, baseStyles.baseDiv, {\n          height: componentHeight\n        })\n      }, _react2[\"default\"].createElement('style', {\n        dangerouslySetInnerHTML: {\n          __html: baseStyles.rootStyle\n        }\n      }), _react2[\"default\"].createElement('div', {\n        id: 'rrp-track',\n        style: _extends({}, baseStyles.track, {\n          borderRadius: height,\n          background: toRgbaString(trackColor)\n        }, trackPosition(this.props))\n      }), _react2[\"default\"].createElement('div', {\n        id: 'rrp-fill',\n        style: _extends({}, baseStyles.fill, {\n          borderRadius: height,\n          background: toRgbaString(fillColor),\n          width: 'calc(100% * ' + percentProgress + ' + ' + (1 - percentProgress) * componentHeight + 'px)'\n        }, trackPosition(this.props))\n      }), hideThumb ? null : _react2[\"default\"].createElement('div', {\n        id: 'rrp-thumb',\n        style: _extends({}, baseStyles.thumb, {\n          width: componentHeight,\n          height: componentHeight,\n          borderRadius: componentHeight,\n          background: toRgbaString(thumbColor),\n          left: 'calc((100% - ' + componentHeight + 'px) * ' + percentProgress + ')'\n        })\n      }), _react2[\"default\"].createElement('input', {\n        style: _extends({}, trackPosition(this.props), {\n          width: 'calc(100% - ' + componentHeight + 'px)',\n          marginLeft: componentHeight / 2,\n          marginRight: componentHeight / 2,\n          height: componentHeight\n        }, baseStyles.input),\n        type: 'range',\n        onChange: this.onChange,\n        min: min,\n        max: max\n      })));\n    }\n  }]);\n\n  return Range;\n}(_react2[\"default\"].Component);\n\nRange.defaultProps = {\n  fillColor: {\n    r: 255,\n    g: 255,\n    b: 255,\n    a: 1\n  },\n  trackColor: {\n    r: 255,\n    g: 255,\n    b: 255,\n    a: 0.5\n  },\n  thumbColor: {\n    r: 255,\n    g: 255,\n    b: 255,\n    a: 1\n  },\n  thumbSize: 12,\n  height: 6,\n  min: 0,\n  max: 100,\n  width: 300,\n  value: 0,\n  onChange: function onChange() {}\n};\nvar colorWithAlpha = {\n  r: _react.PropTypes.number.isRequired,\n  g: _react.PropTypes.number.isRequired,\n  b: _react.PropTypes.number.isRequired,\n  a: _react.PropTypes.number.isRequired\n};\nRange.propTypes = {\n  fillColor: _react.PropTypes.shape(colorWithAlpha),\n  trackColor: _react.PropTypes.shape(colorWithAlpha),\n  thumbColor: _react.PropTypes.shape(colorWithAlpha),\n  hideThumb: _react.PropTypes.bool,\n  height: _react.PropTypes.number,\n  thumbSize: _react.PropTypes.number,\n  min: _react.PropTypes.number,\n  max: _react.PropTypes.number,\n  onChange: _react.PropTypes.func,\n  value: _react.PropTypes.number,\n  width: _react2[\"default\"].PropTypes.oneOfType([_react2[\"default\"].PropTypes.string, _react2[\"default\"].PropTypes.number]),\n  readOnly: _react.PropTypes.bool\n};\nexports[\"default\"] = Range;","map":null,"metadata":{},"sourceType":"module"}