{"ast":null,"code":"var _jsxFileName = \"/Users/kotya/sequencer/app/javascript/components/effects/Tremolo.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport Slider from '../controls/Slider';\nimport BpmSlider from '../controls/BpmSlider';\nimport ToggleSwitch from '../controls/ToggleSwitch';\nimport PlaySwitch from '../controls/PlaySwitch';\nimport Knob from '../controls/Knob';\n\nvar Tremolo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tremolo, _React$Component);\n\n  function Tremolo(props) {\n    _classCallCheck(this, Tremolo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Tremolo).call(this, props));\n  }\n\n  _createClass(Tremolo, [{\n    key: \"render\",\n    value: function render() {\n      var name = 'tremolo';\n      var _this$props = this.props,\n          effect = _this$props.effect,\n          on = _this$props.on,\n          changeEffectWetValue = _this$props.changeEffectWetValue,\n          changeTremoloDepthValue = _this$props.changeTremoloDepthValue,\n          toggleEffect = _this$props.toggleEffect;\n      return React.createElement(\"div\", {\n        className: \"Effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"effectOn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(ToggleSwitch, {\n        value: \"Tremolo\",\n        current: on,\n        handleClick: toggleEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Tremolo\")), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Wet\"), React.createElement(Slider, {\n        name: name,\n        min: \"0\",\n        max: \"1\",\n        value: effect.wet.value,\n        handleValueChange: changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"knobList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"knobform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Frequency\"), React.createElement(Knob, {\n        min: \"0\",\n        max: \"100\",\n        value: effect.tremolo.value,\n        handleValueChange: changeTremoloDepthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Tremolo;\n}(React.Component);\n\nexport { Tremolo as default };","map":{"version":3,"sources":["/Users/kotya/sequencer/app/javascript/components/effects/Tremolo.jsx"],"names":["React","Slider","BpmSlider","ToggleSwitch","PlaySwitch","Knob","Tremolo","props","name","effect","on","changeEffectWetValue","changeTremoloDepthValue","toggleEffect","wet","value","tremolo","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;IAEqBC,O;;;;;AACnB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gFACXA,KADW;AAElB;;;;6BAEQ;AACP,UAAIC,IAAI,GAAG,SAAX;AADO,wBASH,KAAKD,KATF;AAAA,UAILE,MAJK,eAILA,MAJK;AAAA,UAKLC,EALK,eAKLA,EALK;AAAA,UAMLC,oBANK,eAMLA,oBANK;AAAA,UAOLC,uBAPK,eAOLA,uBAPK;AAAA,UAQLC,YARK,eAQLA,YARK;AAWP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAEH,EAFX;AAGE,QAAA,WAAW,EAAEG,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CADN,EASM;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEL,IADR;AAEE,QAAA,GAAG,EAAC,GAFN;AAGE,QAAA,GAAG,EAAC,GAHN;AAIE,QAAA,KAAK,EAAEC,MAAM,CAACK,GAAP,CAAWC,KAJpB;AAKE,QAAA,iBAAiB,EAAEJ,oBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CATN,EAmBM;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAC,GADN;AAEE,QAAA,GAAG,EAAC,KAFN;AAGE,QAAA,KAAK,EAAEF,MAAM,CAACO,OAAP,CAAeD,KAHxB;AAIE,QAAA,iBAAiB,EAAEH,uBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CAnBN,CADF;AAiCD;;;;EAjDkCZ,KAAK,CAACiB,S;;SAAtBX,O","sourcesContent":["import React from 'react'\n\nimport Slider from '../controls/Slider'\nimport BpmSlider from '../controls/BpmSlider'\nimport ToggleSwitch from '../controls/ToggleSwitch'\nimport PlaySwitch from '../controls/PlaySwitch'\nimport Knob from '../controls/Knob'\n\nexport default class Tremolo extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    let name = 'tremolo'\n\n    const {\n      effect,\n      on,\n      changeEffectWetValue,\n      changeTremoloDepthValue,\n      toggleEffect\n    } = this.props\n\n    return (\n      <div className=\"Effect\">\n            <div className=\"effectOn\">\n              <ToggleSwitch\n                value=\"Tremolo\"\n                current={on}\n                handleClick={toggleEffect}\n              />\n              <h1>Tremolo</h1>\n            </div>\n            <div className=\"slider\">\n              <p>Wet</p>\n              <Slider\n                name={name}\n                min=\"0\"\n                max=\"1\"\n                value={effect.wet.value}\n                handleValueChange={changeEffectWetValue}\n              />\n            </div>\n            <div className=\"knobList\">\n              <div className=\"knobform\">\n                <p>Frequency</p>\n                <Knob\n                  min=\"0\"\n                  max=\"100\"\n                  value={effect.tremolo.value}\n                  handleValueChange={changeTremoloDepthValue}\n                />\n              </div>\n            </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}